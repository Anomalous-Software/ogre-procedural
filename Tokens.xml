<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>extruder</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>extruder.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>procedural-howto</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>procedural-howto.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>primitives</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>primitives.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shapepath</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>shapepath.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textures</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>textures.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objgengrp</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__objgengrp.html</Path>
    <Abstract>Elements for procedural mesh generation of various objects. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pathgrp</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__pathgrp.html</Path>
    <Abstract>Elements for path generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shapegrp</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__shapegrp.html</Path>
    <Abstract>Elements for shape generation and shape primitives. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SIDE_LEFT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>group__shapegrp.html</Path>
    <Anchor>gga2a97c3224a598acc5ace813cceca7805a650e356440ee836b0502f7cfe21c6c71</Anchor>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SIDE_RIGHT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>group__shapegrp.html</Path>
    <Anchor>gga2a97c3224a598acc5ace813cceca7805a64979530af858b14b9576c0ddb661500</Anchor>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>texturegrp</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group__texturegrp.html</Path>
    <Abstract>Elements for procedural texture creation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>namespaceProcedural.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureBufferPtr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>namespaceProcedural.html</Path>
    <Anchor>a0df0b00fc93e4116484b6dc235f58013</Anchor>
    <Abstract>Type for a TextureBuffer pointer. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PointList</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>namespaceProcedural.html</Path>
    <Anchor>adb317c3e17e2c78f59018e83915e887c</Anchor>
    <DeclaredIn>ProceduralTriangulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeTangents</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>namespaceProcedural.html</Path>
    <Anchor>aac7a48b2e547e3d7ef07a90b7dcd2a3b</Anchor>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeCubicHermitePoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>namespaceProcedural.html</Path>
    <Anchor>adbfb37f6b61f4b0291a3dbbf7a0220dd</Anchor>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeCatmullRomPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>namespaceProcedural.html</Path>
    <Anchor>ab8c1566ecd1e86e51becd0854642393b</Anchor>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>computeKochanekBartelsPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>namespaceProcedural.html</Path>
    <Anchor>a5d665fc0e7c13bdbec905d3a1350d52c</Anchor>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AT_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>namespaceProcedural.html</Path>
    <Anchor>abb06802e58dd5515b31070f22418cf14ac3d64490d51a429753315353d36b286a</Anchor>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AT_STRAIGHT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>namespaceProcedural.html</Path>
    <Anchor>abb06802e58dd5515b31070f22418cf14a75f628c8716dc3da24ede945dc1040e4</Anchor>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AT_CATMULL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural</Scope>
    </TokenIdentifier>
    <Path>namespaceProcedural.html</Path>
    <Anchor>abb06802e58dd5515b31070f22418cf14ad839a2d8bebe9839c92e46b0f8bfec58</Anchor>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Abnormals</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Abstract>Use alpha channel as an mask for an other image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Abnormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>ac071301640d1da85dabf178b16fc516b</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a361fa843a64d3d9bb67b7e728c6d3753</Anchor>
    <Abstract>Set parameter image for compensation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>aaab54ded92e455b40fbc648a8753adee</Anchor>
    <Abstract>Set rotation angle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>afc7c259c48f2fa99bfeb468e13f147e0</Anchor>
    <Abstract>Set rotation angle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a9ceb5b315018910a8d58ec8190d1359a</Anchor>
    <Abstract>Set rotation angle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>aae654925bab72bf62e88c667e823463d</Anchor>
    <Abstract>Set rotation axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>ab89daa40f3abbc86f6035bf157316753</Anchor>
    <Abstract>Set rotation axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSensitivity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a15f91fc434f8d16caa4d3583c88a2d68</Anchor>
    <Abstract>Set sensitivity. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCompensation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a4eb3ef2eeadf7f08ff8db5ed1dfdd9ee</Anchor>
    <Abstract>Set compensation method. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMirror</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>af47819613f604bed8ddd186a21a1ac2e</Anchor>
    <Abstract>Set mirror method. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>ac24b75d3750d02b954048998e20cba73</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COMPENSATION_NORMAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a413db543bfd3c41ed7081c2f206e710faef069d9fad8a4176860e4fb0cb3bca07</Anchor>
    <Abstract>Use as a normal map. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COMPENSATION_HEIGHT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a413db543bfd3c41ed7081c2f206e710faf5ab475abdb426829887b18e22148bd3</Anchor>
    <Abstract>Use as a height map. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>COMPENSATION_QUATERNION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a413db543bfd3c41ed7081c2f206e710fa77f1a0b0cffa5605ab3a5bca35e1ed7e</Anchor>
    <Abstract>Use as a list of quaternion. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIRROR_NONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a3cd9d226dd2904bf920f9c69a7797cb9af824b6bd9f58cd5ff0fd425243a796e3</Anchor>
    <Abstract>None. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIRROR_X_YZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a3cd9d226dd2904bf920f9c69a7797cb9a1b01124973a894cfddbb986e482dfe8d</Anchor>
    <Abstract>X : YZ. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIRROR_Y_XZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a3cd9d226dd2904bf920f9c69a7797cb9a2ae3d0faf83dfd31e843523879996d1b</Anchor>
    <Abstract>Y : XZ. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MIRROR_X_Y_Z</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Abnormals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Abnormals.html</Path>
    <Anchor>a3cd9d226dd2904bf920f9c69a7797cb9a4fc7191fad034dc0764303530481b158</Anchor>
    <Abstract>X+Y : Z. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Alpha</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Alpha</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Alpha.html</Path>
    <Abstract>Colour extraction. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Alpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Alpha</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Alpha.html</Path>
    <Anchor>a1f2e68b35e596931bc2442f22d2d916f</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExtractColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Alpha</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Alpha.html</Path>
    <Anchor>abcedba9931a4e16c0960a6b0092c8ddf</Anchor>
    <Abstract>Set the colour to extract. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExtractColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Alpha</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Alpha.html</Path>
    <Anchor>a1be066792a56c57db48b05e94fc2e3ec</Anchor>
    <Abstract>Set the colour to extract. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Alpha</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Alpha.html</Path>
    <Anchor>ab82f56dbb5216b44f8fdd83b02979c40</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::AlphaMask</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::AlphaMask</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1AlphaMask.html</Path>
    <Abstract>Use alpha channel as an mask for an other image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AlphaMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::AlphaMask</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1AlphaMask.html</Path>
    <Anchor>ac78fe50e4fcce94316b97ec94ec82916</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourAlphaMask</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::AlphaMask</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1AlphaMask.html</Path>
    <Anchor>a87767093c95500f9b5ee44819cfac869</Anchor>
    <Abstract>Set mode of alpha masking. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::AlphaMask</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1AlphaMask.html</Path>
    <Anchor>ad9fffa5b84604e971ac036a91bf135d5</Anchor>
    <Abstract>Set parameter image for masking/colouring. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::AlphaMask</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1AlphaMask.html</Path>
    <Anchor>a06c06dff8c306acc21a9644c9bb4c355</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::BaseSpline2</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>Procedural::BaseSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Abstract>Base class for Shape generators. </Abstract>
    <DeclaredIn>ProceduralShapeGeneratorsBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseSpline2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>aeaeb9a067acf6fe5a91d580edbaf0fac</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralShapeGeneratorsBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutSide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a598f1d8096ac473923a358ce6b3788af</Anchor>
    <Abstract>Sets the out side of the shape. </Abstract>
    <DeclaredIn>ProceduralShapeGeneratorsBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutSide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a70d143dbf3767a20ae16fc926c14163a</Anchor>
    <Abstract>Gets the out side of the shape. </Abstract>
    <DeclaredIn>ProceduralShapeGeneratorsBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a0861117257db31cca10603432e353311</Anchor>
    <Abstract>Sets the number of segments between 2 control points Minimum of numSeg is 1. </Abstract>
    <DeclaredIn>ProceduralShapeGeneratorsBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a445c5edeb925343cf7069db5d141f30c</Anchor>
    <Abstract>Closes the spline. </Abstract>
    <DeclaredIn>ProceduralShapeGeneratorsBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumSeg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a881c6e224fbfbaea1f24290b8c4a7879</Anchor>
    <Abstract>The number of segments between 2 control points. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a38bfe7e77061b1952f2f614f07b35740</Anchor>
    <Abstract>Whether the shape will be closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutSide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>ad2d07b0e264390ee4016aa415cc1ed36</Anchor>
    <Abstract>The &quot;out&quot; side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::BaseSpline3</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>Procedural::BaseSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Abstract>Base class for Path generators. </Abstract>
    <DeclaredIn>ProceduralPathGeneratorsBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BaseSpline3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>abc09a057ad25a918dd657262d4b10a15</Anchor>
    <DeclaredIn>ProceduralPathGeneratorsBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>ab845bfe8949bcdfdfce0ccf96f2760ef</Anchor>
    <Abstract>Sets the number of segments between 2 control points Minimum of numSeg is 1. </Abstract>
    <DeclaredIn>ProceduralPathGeneratorsBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>aae5f348744ff92a87ffebfd814ca81b3</Anchor>
    <Abstract>Closes the spline. </Abstract>
    <DeclaredIn>ProceduralPathGeneratorsBase.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumSeg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>aa175c4230f072bd7cf470ebbf1fe0ed8</Anchor>
    <Abstract>The number of segments between 2 control points. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>a569c776b415da3748a2a7feecfe42f6b</Anchor>
    <Abstract>Tells if the spline is closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::BezierCurve2</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::BezierCurve2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve2.html</Path>
    <Abstract>Builds a shape from a Bezier-Curve. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BezierCurve2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve2.html</Path>
    <Anchor>affe44156566c6f5b47594648e31eb3f2</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve2.html</Path>
    <Anchor>a99facf7526aa2fd41f543da2222bf974</Anchor>
    <Abstract>Sets number of segments per two control points Minimum of numSeg is 1. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve2.html</Path>
    <Anchor>ae33fe6a3936a4399e5bada21fe95fabd</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve2.html</Path>
    <Anchor>a260ee288c137665afed03ed2eecdc369</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safeGetPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve2.html</Path>
    <Anchor>ac905edd0424a2c744e5cc48d6d5a451e</Anchor>
    <Abstract>Safely gets a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve2.html</Path>
    <Anchor>af55421f18ad845c6d35bf8f5b9ec456e</Anchor>
    <Abstract>Gets the number of control points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve2.html</Path>
    <Anchor>ae9ac3a0aac9bab1b1ab56f818654913f</Anchor>
    <Abstract>Build a shape from bezier control points The curve must at least contain 2 points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; BezierCurve2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a598f1d8096ac473923a358ce6b3788af</Anchor>
    <Abstract>Sets the out side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; BezierCurve2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a70d143dbf3767a20ae16fc926c14163a</Anchor>
    <Abstract>Gets the out side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; BezierCurve2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a445c5edeb925343cf7069db5d141f30c</Anchor>
    <Abstract>Closes the spline. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; BezierCurve2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a38bfe7e77061b1952f2f614f07b35740</Anchor>
    <Abstract>Whether the shape will be closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; BezierCurve2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>ad2d07b0e264390ee4016aa415cc1ed36</Anchor>
    <Abstract>The &quot;out&quot; side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::BezierCurve3</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::BezierCurve3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve3.html</Path>
    <Abstract>Builds a path from a Bezier-Curve. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BezierCurve3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve3.html</Path>
    <Anchor>a1dd4bea10007e31309bf5c54d054f987</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve3.html</Path>
    <Anchor>a29bf8f83bbe16fac118b230be34a9417</Anchor>
    <Abstract>Sets number of segments per two control points Minimum of numSeg is 1. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve3.html</Path>
    <Anchor>a5e133e8be8e18b55b3ad64bea01a5e6e</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve3.html</Path>
    <Anchor>a8076bd12b143b4b117a30d457e184e95</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safeGetPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve3.html</Path>
    <Anchor>aa63588b6329eae7e2531033c8a8638bc</Anchor>
    <Abstract>Safely gets a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve3.html</Path>
    <Anchor>ab4c9e1138532e4ed4a567c07e1407be3</Anchor>
    <Abstract>Gets the number of control points. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BezierCurve3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BezierCurve3.html</Path>
    <Anchor>acdf2919cae40be7da3dceabc7ebcf63d</Anchor>
    <Abstract>Build a path from bezier control points The curve must at least contain 2 points. ...</Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline3&lt; BezierCurve3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>aae5f348744ff92a87ffebfd814ca81b3</Anchor>
    <Abstract>Closes the spline. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline3&lt; BezierCurve3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>a569c776b415da3748a2a7feecfe42f6b</Anchor>
    <Abstract>Tells if the spline is closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Blit</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Abstract>copies a part of the input buffer towards the current buffer. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Blit</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>a3b99119f9d3049932e0fadeaa14d9f9d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>a1764d678a01a25932b538820c26972b8</Anchor>
    <Abstract>Sets the texture buffer that must be copied towards the current texture buffer. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>a639a01458c055700877cdde995ce3c6d</Anchor>
    <Abstract>Set the full rectangle coordinates of the input buffer to copy. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>a7c737edc3900a10daa349afb7f883bd5</Anchor>
    <Abstract>Set the full rectangle coordinates of the input buffer to copy. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>a79dda6762ecb2817e6295f2e13bc4802</Anchor>
    <Abstract>Set the full rectangle coordinates of the input buffer to copy. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>a2f51ed557ef583e82ec9785c0d7fd885</Anchor>
    <Abstract>Set the full rectangle coordinates of the input buffer to copy. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>ab75cc545da6ff90d8868a990a0f0c880</Anchor>
    <Abstract>Set the full rectangle coordinates of the input buffer to copy. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>a47331e7e3091310b9af18fd2ae6c0b26</Anchor>
    <Abstract>Set the full rectangle coordinates of the output buffer where the input is copied to...</Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>af2223590b5f8c8499b7090b0cd019673</Anchor>
    <Abstract>Set the full rectangle coordinates of the output buffer where the input is copied to...</Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>afebf8aae134f967ec83f335213355bb6</Anchor>
    <Abstract>Set the full rectangle coordinates of the output buffer where the input is copied to...</Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>af77e5d1690ba6e0d378704cbf2b30fbe</Anchor>
    <Abstract>Set the full rectangle coordinates of the output buffer where the input is copied to...</Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutputRect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>ab76fb944014ed7dbc0aa16993c8b9039</Anchor>
    <Abstract>Set the full rectangle coordinates of the output buffer where the input is copied to...</Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blit</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blit.html</Path>
    <Anchor>af63f7123ed84deda04d3cbb0982c49fb</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Blur</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Blur</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blur.html</Path>
    <Abstract>Reduce sharpness on input image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Blur</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blur</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blur.html</Path>
    <Anchor>ad7f82f9416fb90284e1ad487a98efd4f</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blur</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blur.html</Path>
    <Anchor>a3b55cfdedbc064117b53bebdbcf728b6</Anchor>
    <Abstract>Set the gaussian block size. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSigma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blur</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blur.html</Path>
    <Anchor>a4f7755492566ae3bf07b4e2aa5f9453c</Anchor>
    <Abstract>Set sigma constant for gaussian filter. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blur</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blur.html</Path>
    <Anchor>a15e0827f7ccd4c6d501db0689c3977dd</Anchor>
    <Abstract>Set the algorithm to blur. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Blur</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blur.html</Path>
    <Anchor>a5a67f0bc5cd056b17658623b601a66c1</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BLUR_BOX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Blur</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blur.html</Path>
    <Anchor>aec9fd7e3592feae14da1916292f66fd5ab3136497315bcb508f19dd9b5de46763</Anchor>
    <Abstract>Use simplified block filter to blur. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BLUR_MEAN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Blur</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blur.html</Path>
    <Anchor>aec9fd7e3592feae14da1916292f66fd5ad068f7dbb68fea07e0c624addb04f264</Anchor>
    <Abstract>Use mean filter to blur. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BLUR_GAUSSIAN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Blur</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Blur.html</Path>
    <Anchor>aec9fd7e3592feae14da1916292f66fd5aafb072855e21064991934e14ffba1058</Anchor>
    <Abstract>Use gaussian filter to blur. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Boolean</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Boolean</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Boolean.html</Path>
    <DeclaredIn>ProceduralBoolean.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Boolean</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Boolean</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Boolean.html</Path>
    <Anchor>abce045728b58d095424444bd16dd2386</Anchor>
    <DeclaredIn>ProceduralBoolean.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMesh1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Boolean</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Boolean.html</Path>
    <Anchor>a1115cf70afbea8d708c53105e5cebae1</Anchor>
    <DeclaredIn>ProceduralBoolean.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMesh2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Boolean</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Boolean.html</Path>
    <Anchor>aea30821b52f7676b6aced1470bb9c00a</Anchor>
    <DeclaredIn>ProceduralBoolean.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBooleanOperation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Boolean</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Boolean.html</Path>
    <Anchor>a7f1feaf93a33b2d10713f7a0153f2b28</Anchor>
    <DeclaredIn>ProceduralBoolean.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Boolean</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Boolean.html</Path>
    <Anchor>abafee65492c0f338f1f855c1eab3046a</Anchor>
    <Abstract>Overloaded by each generator to implement the specifics. </Abstract>
    <DeclaredIn>ProceduralBoolean.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Boolean &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BT_UNION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Boolean</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Boolean.html</Path>
    <Anchor>ae7691276506f91a258465ef7ce1b7e28a997df83545c4fb6655e68c84b6c8b3f8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BT_INTERSECTION</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Boolean</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Boolean.html</Path>
    <Anchor>ae7691276506f91a258465ef7ce1b7e28aef0d1c9352efefb9b1699d3f2a16ebcd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BT_DIFFERENCE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Boolean</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Boolean.html</Path>
    <Anchor>ae7691276506f91a258465ef7ce1b7e28a488ab58e5d4b6ca0926ebdfd05c10806</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::BoxGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::BoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxGenerator.html</Path>
    <Abstract>Generates a box mesh centered on the origin. </Abstract>
    <DeclaredIn>ProceduralBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoxGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxGenerator.html</Path>
    <Anchor>a445aa5fafa50cd2a5bfe3a631952643b</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxGenerator.html</Path>
    <Anchor>a7c5fdd6128b15ebb6779abcc8678afe1</Anchor>
    <Abstract>Sets size along X axis (default=1) X size must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxGenerator.html</Path>
    <Anchor>a811dbbb321b4a565fbcfdbdd321116ac</Anchor>
    <Abstract>Sets size along Y axis (default=1) Y size must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxGenerator.html</Path>
    <Anchor>aa979c363c0724893e3da850d14113cf4</Anchor>
    <Abstract>Sets size along Z axis (default=1) Z size must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxGenerator.html</Path>
    <Anchor>a29ee46da05bf392f1f14794640f147de</Anchor>
    <Abstract>Sets the size (default=1,1,1) </Abstract>
    <DeclaredIn>ProceduralBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxGenerator.html</Path>
    <Anchor>a473a729b1adb0a1efe5c06f697e59d0e</Anchor>
    <Abstract>Sets the number of segments along X axis (default=1) Minimum of numSegX is 1. </Abstract>
    <DeclaredIn>ProceduralBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxGenerator.html</Path>
    <Anchor>a7c82b94e638cbb96533c9d64bdffdf02</Anchor>
    <Abstract>Sets the number of segments along Y axis (default=1) Minimum of numSegY is 1. </Abstract>
    <DeclaredIn>ProceduralBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxGenerator.html</Path>
    <Anchor>a94aafb7e4463ac41a85f8bfda2ed9f04</Anchor>
    <Abstract>Sets the number of segments along Z axis (default=1) Minimum of numSegZ is 1. </Abstract>
    <DeclaredIn>ProceduralBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxGenerator.html</Path>
    <Anchor>a5be13f87d120e4dddfb256c0e8e45d1a</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; BoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::BoxUVModifier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::BoxUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxUVModifier.html</Path>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxUVModifier.html</Path>
    <Anchor>a007167e51412a4f9bf8659ef1142511d</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BoxUVModifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxUVModifier.html</Path>
    <Anchor>a5be257108479770858db509f8ae999af</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxUVModifier.html</Path>
    <Anchor>a64445c516193e156073f659510c1482c</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoxSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxUVModifier.html</Path>
    <Anchor>a32cabb2d883b4876a0b155331b513dc0</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBoxCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxUVModifier.html</Path>
    <Anchor>af0bc47bbab1a8e2844e3800bc7fa54ce</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMappingType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BoxUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxUVModifier.html</Path>
    <Anchor>a40b67b44968e28fcb9df42341d163784</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MT_FULL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::BoxUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxUVModifier.html</Path>
    <Anchor>aa0cb9b7d728b44443e5f0e9378423ee4a54d318f0229f9aa9c61ceb0b4ab63f7b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MT_CROSS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::BoxUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxUVModifier.html</Path>
    <Anchor>aa0cb9b7d728b44443e5f0e9378423ee4afbe1590a16980d5f1deb3a51ef860b83</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MT_PACKED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::BoxUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BoxUVModifier.html</Path>
    <Anchor>aa0cb9b7d728b44443e5f0e9378423ee4aab73c455a4f2b3106a7941d8cd4e0417</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CalculateNormalsModifier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Abstract>WIP. </Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CalculateNormalsModifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Anchor>a44d3de64faf2d4a5b77109fd6fb3facb</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setComputeMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Anchor>a28d07cf97b38ad667ccd5a77e8187dab</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Anchor>aa64b715efbac42334097f4c4af2c8834</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMustWeldUnweldFirst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Anchor>a6ef7e76125d076f01705d117d47417c0</Anchor>
    <Abstract>Tells if the mesh must be first weld (NCM_VERTEX mode) or unweld (NCM_TRIANGLE) before computing norm...</Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Anchor>a1a85ca901a6f5e27dc331cd5ad15978e</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mComputeMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Anchor>a88b50dcf8c440fb72e0180d7a291fdba</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Anchor>ae3de69273aedce6013ba6681fd1304d2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMustWeldUnweldFirst</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Anchor>a798527cec808397e23e522caee78732f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NCM_VERTEX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Anchor>a79d3d9c302326bac5dde9d0a002ee6c8a5dc7d6b7a9007205262f7ccc143ba65d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NCM_TRIANGLE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::CalculateNormalsModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CalculateNormalsModifier.html</Path>
    <Anchor>a79d3d9c302326bac5dde9d0a002ee6c8a085fe5beae0488cfdb963eed81c1c143</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CapsuleGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::CapsuleGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CapsuleGenerator.html</Path>
    <Abstract>Generates a capsule mesh, i.e. </Abstract>
    <DeclaredIn>ProceduralCapsuleGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CapsuleGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CapsuleGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CapsuleGenerator.html</Path>
    <Anchor>ae0ec5d63b4ce39464bbaeb07a88e0beb</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralCapsuleGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CapsuleGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CapsuleGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CapsuleGenerator.html</Path>
    <Anchor>abb128d589f7b1c3edab13839ccee7b75</Anchor>
    <Abstract>Constructor with arguments. </Abstract>
    <DeclaredIn>ProceduralCapsuleGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CapsuleGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CapsuleGenerator.html</Path>
    <Anchor>a39b98ef9b6e278bd852d4e1c3c056204</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralCapsuleGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CapsuleGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CapsuleGenerator.html</Path>
    <Anchor>ac474181089fba70e7ea2ca2b1d9f36a4</Anchor>
    <Abstract>Sets the radius of the cylinder part (default=1) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralCapsuleGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumRings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CapsuleGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CapsuleGenerator.html</Path>
    <Anchor>a287d14c983e39258970da45def5b013e</Anchor>
    <Abstract>Sets the number of segments of the sphere part (default=8) Minimum of numRings is 1...</Abstract>
    <DeclaredIn>ProceduralCapsuleGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CapsuleGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CapsuleGenerator.html</Path>
    <Anchor>afa95cd87030c648300da2f0abee9eab5</Anchor>
    <Abstract>Sets the number of segments when rotating around the cylinder (default=16) Minimum of numSegments is ...</Abstract>
    <DeclaredIn>ProceduralCapsuleGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CapsuleGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CapsuleGenerator.html</Path>
    <Anchor>ace4aa4aa3fa85044261b7d7cce2ca20d</Anchor>
    <Abstract>Sets the number of segments along the axis of the cylinder (default=1) Minimum of numSeg is 1...</Abstract>
    <DeclaredIn>ProceduralCapsuleGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CapsuleGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CapsuleGenerator.html</Path>
    <Anchor>a249e4d104285caa242f3e13282be9710</Anchor>
    <Abstract>Sets the height of the cylinder part of the capsule (default=1) Height must be larger than 0! ...</Abstract>
    <DeclaredIn>ProceduralCapsuleGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CapsuleGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CatmullRomSpline2</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::CatmullRomSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline2.html</Path>
    <Abstract>Builds a shape from a Catmull-Rom Spline. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline2.html</Path>
    <Anchor>a078c0dc9a8193c1e22a58c71ace3f0aa</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline2.html</Path>
    <Anchor>a21d079d5b8e05837570e96ece74be6c9</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safeGetPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline2.html</Path>
    <Anchor>ac1ff764892ed3eee5d01d6ddeea16196</Anchor>
    <Abstract>Safely gets a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline2.html</Path>
    <Anchor>aa94cb3922db3eb2142dd112f6ea9bbec</Anchor>
    <Abstract>Gets the number of control points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline2.html</Path>
    <Anchor>ac6827dadfe89eed324b323e001f70763</Anchor>
    <Abstract>Build a shape from bezier control points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; CatmullRomSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a598f1d8096ac473923a358ce6b3788af</Anchor>
    <Abstract>Sets the out side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; CatmullRomSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a70d143dbf3767a20ae16fc926c14163a</Anchor>
    <Abstract>Gets the out side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; CatmullRomSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a0861117257db31cca10603432e353311</Anchor>
    <Abstract>Sets the number of segments between 2 control points Minimum of numSeg is 1. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; CatmullRomSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a445c5edeb925343cf7069db5d141f30c</Anchor>
    <Abstract>Closes the spline. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; CatmullRomSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a881c6e224fbfbaea1f24290b8c4a7879</Anchor>
    <Abstract>The number of segments between 2 control points. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; CatmullRomSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a38bfe7e77061b1952f2f614f07b35740</Anchor>
    <Abstract>Whether the shape will be closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; CatmullRomSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>ad2d07b0e264390ee4016aa415cc1ed36</Anchor>
    <Abstract>The &quot;out&quot; side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CatmullRomSpline3</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::CatmullRomSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline3.html</Path>
    <Abstract>Builds a path from a Catmull-Rom Spline. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CatmullRomSpline3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline3.html</Path>
    <Anchor>a6edc18e233b42283435ba5d97047a7b5</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CatmullRomSpline3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline3.html</Path>
    <Anchor>aad4fd0c4e3a43f875279cc1398532fd5</Anchor>
    <Abstract>Copy constructor from an Ogre simplespline. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toSimpleSpline</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline3.html</Path>
    <Anchor>a4c172062f86cffb47188bb5cf3faba0b</Anchor>
    <Abstract>Outputs current spline to an Ogre spline. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline3.html</Path>
    <Anchor>ab1c6fb84e31db1709a0f362a8c73239c</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline3.html</Path>
    <Anchor>a7e2a9918a9039a5e914e9e0fe2454d8a</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safeGetPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline3.html</Path>
    <Anchor>a3ccecdb44b4a57d3fb8d18b9e97c3ab3</Anchor>
    <Abstract>Safely gets a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline3.html</Path>
    <Anchor>aa2af5af6ff28941ce83075334cf5d070</Anchor>
    <Abstract>Gets the number of control points. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CatmullRomSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CatmullRomSpline3.html</Path>
    <Anchor>a0147f190be397bf64e1f533c25dd2bd3</Anchor>
    <Abstract>Build a path from Catmull-Rom control points. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline3&lt; CatmullRomSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>ab845bfe8949bcdfdfce0ccf96f2760ef</Anchor>
    <Abstract>Sets the number of segments between 2 control points Minimum of numSeg is 1. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline3&lt; CatmullRomSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>aae5f348744ff92a87ffebfd814ca81b3</Anchor>
    <Abstract>Closes the spline. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline3&lt; CatmullRomSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>aa175c4230f072bd7cf470ebbf1fe0ed8</Anchor>
    <Abstract>The number of segments between 2 control points. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline3&lt; CatmullRomSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>a569c776b415da3748a2a7feecfe42f6b</Anchor>
    <Abstract>Tells if the spline is closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Cell</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Abstract>Create a texture consisting of cells aligned in a grid, or a chessboard. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cell</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a21b4cb8741192b2e4adb051cb5ac66ed</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a045abd0b48bcef82559cc58728aabada</Anchor>
    <Abstract>Set the colour of the cell top. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a16d3b12fdcea4ff1e8e2758c8dd6aabf</Anchor>
    <Abstract>Set the colour of the cell top. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a57b36d4c4dde26b15e645656b9d106d3</Anchor>
    <Abstract>Set the seed for &quot;random&quot; number generator. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRegularity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a4746fab732ae6667ff6a99ca78f8b876</Anchor>
    <Abstract>Set the regularity of texture. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a02746b6186f1ff25e4504aa5ffdd275e</Anchor>
    <Abstract>Set the density of cells in texture. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a9403e898e707a87243b7102741ebdbfa</Anchor>
    <Abstract>Set the cell mode of texture. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPattern</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a62be9de00223b37bd4eb502872575d60</Anchor>
    <Abstract>Set the cell pattern of texture. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a640a9746a6ef147b092723fb4cb956e1</Anchor>
    <Abstract>Run image generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_GRID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a671028f2462766f3e605cde109d63815a2cd5cab2e94bddd0c1603042e8d463a3</Anchor>
    <Abstract>Paint cells on a grid. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_CHESSBOARD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a671028f2462766f3e605cde109d63815ae5b69f25f962f80026b01aa3fd1bb1b9</Anchor>
    <Abstract>Paint cells on a chessboard. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATTERN_BOTH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a6de9b666c2183bbf78b591ddce7c1eb8af982d53783ab733fceece32e7bb25799</Anchor>
    <Abstract>PATTERN_CROSS | PATTERN_CONE. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATTERN_CROSS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a6de9b666c2183bbf78b591ddce7c1eb8a41259679b935fe821eaca705ce01c731</Anchor>
    <Abstract>Construct cells from vertices. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PATTERN_CONE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cell</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cell.html</Path>
    <Anchor>a6de9b666c2183bbf78b591ddce7c1eb8a75491c029f2c288dcb079de7656b93c0</Anchor>
    <Abstract>Construct cells from cicles. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Channel</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Channel</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Channel.html</Path>
    <Abstract>Extract one channel or create gray image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Channel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Channel</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Channel.html</Path>
    <Anchor>add7441cff3911a1be86188b96af56e78</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSelection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Channel</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Channel.html</Path>
    <Anchor>a011c2942baebfa9350eac54e40bc3422</Anchor>
    <Abstract>Set selection. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Channel</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Channel.html</Path>
    <Anchor>ad81b5689dcefadae1ecdae48335b4c1a</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SELECT_RED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Channel</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Channel.html</Path>
    <Anchor>ab6de815c345535f19e18958ef198cacda2bd5c5d5dadaabd84d65d39e7aa57043</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SELECT_GREEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Channel</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Channel.html</Path>
    <Anchor>ab6de815c345535f19e18958ef198cacda2a5115fca7be5d61ca57c44dd1eb1a65</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SELECT_BLUE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Channel</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Channel.html</Path>
    <Anchor>ab6de815c345535f19e18958ef198cacdaed62c05d0741c158081a79a234b00a42</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SELECT_ALPHA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Channel</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Channel.html</Path>
    <Anchor>ab6de815c345535f19e18958ef198cacda6988b2cb9271778c892adb163594b933</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SELECT_GRAY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Channel</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Channel.html</Path>
    <Anchor>ab6de815c345535f19e18958ef198cacdadfadd69281e70ac23afba335956a556c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Circle</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Circle</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Circle.html</Path>
    <Abstract>Represents a 2D circle. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Circle</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Circle.html</Path>
    <Anchor>a523ba9d796a97fc27e3b895a7c03c212</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Circle</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Circle.html</Path>
    <Anchor>ab1c412af4eae5cb8cb2bba655228eca1</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Circle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Circle</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Circle.html</Path>
    <Anchor>aa6938a8292f193229b3214ca350f488a</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPointInside</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Circle</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Circle.html</Path>
    <Anchor>a90c1bdcda7eabd646f9b9648ea5f2052</Anchor>
    <Abstract>Tells whether that point is inside the circle or not. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CircleShape</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::CircleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleShape.html</Path>
    <Abstract>Builds a circular shape. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CircleShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleShape.html</Path>
    <Anchor>a5c4c24e0245508ba209676a369b6a184</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleShape.html</Path>
    <Anchor>ad213d110d399531b1a438c50a3e487e2</Anchor>
    <Abstract>Sets radius Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleShape.html</Path>
    <Anchor>ac036a43f5e09f991406bdfd570f5e14b</Anchor>
    <Abstract>Sets number of segments Minimum of numSeg is 1. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleShape.html</Path>
    <Anchor>ab676391571014da9e206c51d09d1bef7</Anchor>
    <Abstract>Builds the shape. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CircleTexture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Abstract>Draw a circle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CircleTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>a4805fc9eead3d6d87ac36abcd6a65df4</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>af0a7e4da7db5e955ae8f39c79eaa26c0</Anchor>
    <Abstract>Set the fill colour of the circle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>aa75cddea289da9d34950d9f950dd55a1</Anchor>
    <Abstract>Set the fill colour of the circle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>ad8ee6c7f32ec5d87c63f53a0b35ee664</Anchor>
    <Abstract>Set the absolute radius of the circle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>a608ce6aa8916575686e493c4da792056</Anchor>
    <Abstract>Set the relative radius of the circle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>a89aca1730f3470ce0ac41a705c464e85</Anchor>
    <Abstract>Set absolute x position of circle center point in px. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>ae5fbb0a846da70b14aa5bc73687e1533</Anchor>
    <Abstract>Set relative x position of circle center point as Real. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>a80106f267982d41d25855ffe87e2e51f</Anchor>
    <Abstract>Set absolute y position of circle center point in px. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>a8d6776c971835cd6ce0b93cd953fdcc0</Anchor>
    <Abstract>Set relative y position of circle center point as Real. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>acb40144c425142a74f26747148535d1d</Anchor>
    <Abstract>Set the position of circle center point. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>af7d112ac2fad8971bd700418cacd37de</Anchor>
    <Abstract>Set the position of circle center point. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>a254bc8a3734920ef16ab926fe2947b66</Anchor>
    <Abstract>Set the position of circle center point. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CircleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CircleTexture.html</Path>
    <Anchor>aa793cbcde218f8e04cca568fac376e39</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Cloud</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Cloud</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cloud.html</Path>
    <Abstract>Creates a cloud structured image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cloud</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cloud</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cloud.html</Path>
    <Anchor>ae70e354ad58829227395620afe5ea957</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cloud</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cloud.html</Path>
    <Anchor>a22a002cb214b2a1b15d79a49b32914b0</Anchor>
    <Abstract>Set the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cloud</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cloud.html</Path>
    <Anchor>ad1a9aa3e237e0d5e6896c30d9b564a2b</Anchor>
    <Abstract>Sets the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cloud</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cloud.html</Path>
    <Anchor>a27634e35b70b2da25b6f24876dad8925</Anchor>
    <Abstract>Set the seed for &quot;random&quot; number generator. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cloud</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cloud.html</Path>
    <Anchor>af823167f2d340c73e36707003816245b</Anchor>
    <Abstract>Run image generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Colours</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Abstract>A colour filter. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Colours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Anchor>af419010b102484799e8bf908f3aab0b1</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Anchor>aae9a6936b23f04421f7d33b12fcb5a35</Anchor>
    <Abstract>Set the base colour to work on. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Anchor>ac5ac1f9fb19c0ae45c96901d9757ebf3</Anchor>
    <Abstract>Set the base colour to work on. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourPercent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Anchor>a4fb033b1f54715b5ef54554ab3373669</Anchor>
    <Abstract>Set the percent colour to add on image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourPercent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Anchor>af4861fd49cd5b581fed70355d6937ee0</Anchor>
    <Abstract>Set the percent colour to add on image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBrightness</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Anchor>ac0010eff06550ac0c9201b6aed3eead2</Anchor>
    <Abstract>Set brightness of the image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setContrast</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Anchor>a769d4bb4d49dfd5c54779248e54a982c</Anchor>
    <Abstract>Set contrast of the image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSaturation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Anchor>a778f51bfffea86099b1f3dc704061515</Anchor>
    <Abstract>Set saturation of the image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Anchor>adb36815d8cff59d07b9666af735bc61b</Anchor>
    <Abstract>Set alpha of the image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Colours</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Colours.html</Path>
    <Anchor>aeb2a36bc129c266ebebf7ae5a4b088a5</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Combine</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Abstract>Combine inputs together. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Combine</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>a23952fddb9a890cd3f61ef872fd95001</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>a95e21b5915edc3c2de53c51805597f24</Anchor>
    <Abstract>Add image to process queue. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>abd2791bf673d7357ebe8121676ae662f</Anchor>
    <Abstract>Set the percent colour to add on image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>ada23cfd534e4513d846ee6aecd362092</Anchor>
    <Abstract>Set the percent colour to add on image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>add77f4798275a7d49f4848344cd4066b</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_ADD_CLAMP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>addc8d4a914178e63e67d4405e7420408a0151f0e2cd8e15d31bf8944a86584b56</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_ADD_WRAP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>addc8d4a914178e63e67d4405e7420408ad35d95f05009b7dc3540833cc7951ec8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_SUB_CLAMP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>addc8d4a914178e63e67d4405e7420408a7de79771bac1fef7799de58586dc10d5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_SUB_WRAP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>addc8d4a914178e63e67d4405e7420408a1e6d739182f1bb2db56849a7264876ef</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_MULTIPLY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>addc8d4a914178e63e67d4405e7420408abadd833922936f5fb89150a4fb3d9fe0</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_MULTIPLY2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>addc8d4a914178e63e67d4405e7420408a229ecd4506e58e13d84234023d493356</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_BLEND</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>addc8d4a914178e63e67d4405e7420408aba1037a2a1c9b18ff0e98bebbb1ac7d8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_ALPHA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>addc8d4a914178e63e67d4405e7420408a9f4c9cc8d7e3d69f45cf33fed2d1db6d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>METHOD_LAYER</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Combine</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Combine.html</Path>
    <Anchor>addc8d4a914178e63e67d4405e7420408a93d0bcf864a6691e826a910e3c0ac3a1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::ConeGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::ConeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ConeGenerator.html</Path>
    <Abstract>Generates a cone mesh along Y-axis. </Abstract>
    <DeclaredIn>ProceduralConeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ConeGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ConeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ConeGenerator.html</Path>
    <Anchor>a95a4975f0b4ff4bfbd2eee40ee576540</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralConeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ConeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ConeGenerator.html</Path>
    <Anchor>a8aa61425f812b8adadf4e2494b77bf65</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralConeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ConeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ConeGenerator.html</Path>
    <Anchor>abf53464a149d57619e4dc43ad939a1ca</Anchor>
    <Abstract>Sets the number of segments on the side of the base (default=16) Minimum of numSegBase is 1...</Abstract>
    <DeclaredIn>ProceduralConeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ConeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ConeGenerator.html</Path>
    <Anchor>a18161d84d877ffe1dc1c0acd8699026c</Anchor>
    <Abstract>Sets the number of segments on the height (default=1) Minimum of numSegHeight is 1. </Abstract>
    <DeclaredIn>ProceduralConeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ConeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ConeGenerator.html</Path>
    <Anchor>a6ed4a30b36d23b245c8dd9dceb97cb59</Anchor>
    <Abstract>Sets the base radius (default=1) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralConeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ConeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ConeGenerator.html</Path>
    <Anchor>a1428c9bdfcc6e444f06fa3bfd265ab3f</Anchor>
    <Abstract>Sets the height of the cone (default=1) Height must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralConeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; ConeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Convolution</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Abstract>Convolution filter. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Convolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>a504acf5529ab3042f33b8055e2820244</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Convolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>aeed993a5320e800d3569ff9f9866bea5</Anchor>
    <Abstract>Default destructor to release memory. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKernel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>ad6b90e4dcaf0698dd24b262f2a787818</Anchor>
    <Abstract>Set a new kernel. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKernel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>ac050dee15da86716263c33f57ec6b74b</Anchor>
    <Abstract>Set a new kernel. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setKernel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>a463fbcced925ea3ee3d0ffce94cee664</Anchor>
    <Abstract>Set a new kernel. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setDivisor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>a17cd156f79d22d1115e1f382ea9501e6</Anchor>
    <Abstract>Set a devisor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateDivisor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>a31e74eae5ba41a4d82d4a70ddc6f1c2a</Anchor>
    <Abstract>Calculate a new devisor from given kernel. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>ac285ed7298b3a92e55183dad025acdc1</Anchor>
    <Abstract>Set threshold value. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCalculateEdgeDivisor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>ae91be2ee8941e2fd20c93ce95cdd6a17</Anchor>
    <Abstract>Switch dynamic divisor for edges on or off. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIncludeAlphaChannel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>a601c0f81334bf349a4851bccc582b65d</Anchor>
    <Abstract>Switch on/off the use of the alpha channel. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Convolution</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Convolution.html</Path>
    <Anchor>a3745e985920bf9d5c42ca87340e77b0a</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Crack</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Abstract>Create lines that can be randomly cracked or follow a normal map. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Crack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>a623397146056e406c1337fa711b0aa8e</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>aab2de8fbc60cfc6bc4f8214762564692</Anchor>
    <Abstract>Set parameter image for normal mapping. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>a67c87253790eeb870d448d12817728b7</Anchor>
    <Abstract>Set the colour to draw. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>ade30d39564b4bd8c260d4de5837229d9</Anchor>
    <Abstract>Set the colour to draw. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>acdd4ab305e5702a8fda55808eb5ee095</Anchor>
    <Abstract>Set the number of generated lines. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVariation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>a2293088cdccf188ae8e530998c08a613</Anchor>
    <Abstract>Set the smoothness of generated lines. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>adedc1891e7c1e72bfdbf4b7d5a407b73</Anchor>
    <Abstract>Set the minimum length of generated line segments. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>a187d5c4c30e0527dfef541e72535d646</Anchor>
    <Abstract>Set the seed for &quot;random&quot; number generator. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLengthDecision</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>ab1f4c4a0ee8f91abf2b435c4015df7ea</Anchor>
    <Abstract>Set method for calculating the line segments length. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQuality</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>acb0f194efb0c3c2997d5470984925723</Anchor>
    <Abstract>Set method for high quality painting. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>aedfeeda71f8f39f10dc3d7fb77ccf9fd</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LENGTH_DECISION_RANDOM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>a12f47abb820580f13e9ea54ca309a37aae3c2c5ce2620dab1340e7f109f38049a</Anchor>
    <Abstract>Use a random number generator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LENGTH_DECISION_CONSTANT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>a12f47abb820580f13e9ea54ca309a37aa9edc8c0a1439f3f7d23ad90ef3706787</Anchor>
    <Abstract>Use a constant value. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LENGTH_DECISION_NORMAL_BASED</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>a12f47abb820580f13e9ea54ca309a37aacb9593908c807e814fdd7673c12f1c54</Anchor>
    <Abstract>Use a normal map. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QUALITY_HIGH_OFF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>a99c4d139820ae0735f92e602adfb6f76acab6cd829d73609b5c41516ff85eeb6d</Anchor>
    <Abstract>Switch high quality off. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QUALITY_ALPHA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>a99c4d139820ae0735f92e602adfb6f76a66fe0394b640c3d3ce3233a14a4bf2b6</Anchor>
    <Abstract>Use alpha channel. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>QUALITY_SUBPIXEL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Crack</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Crack.html</Path>
    <Anchor>a99c4d139820ae0735f92e602adfb6f76a7233e447395ea270f9d31f8c5379a89f</Anchor>
    <Abstract>Use sub pixel block. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CubicHermiteSpline2</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::CubicHermiteSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline2.html</Path>
    <Abstract>Produces a shape from Cubic Hermite control points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControlPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Procedural::CubicHermiteSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline2.html</Path>
    <Anchor>ae6e8882497fe7914736d5b54e0b60144</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline2.html</Path>
    <Anchor>affa3cd169dd4b62f117033f0f70f0e79</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline2.html</Path>
    <Anchor>a16c473fe2eaa5d96f23e30bfca540606</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline2.html</Path>
    <Anchor>a49ddd8f23c27a836da517aa39b34cd20</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline2.html</Path>
    <Anchor>a4185e85a24c216f3ba8e4d79b05421e6</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safeGetPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline2.html</Path>
    <Anchor>ac8cde67072eaecbd60c8c66e12362aec</Anchor>
    <Abstract>Safely gets a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline2.html</Path>
    <Anchor>a8a844c5eb065dedfd89a90136119711b</Anchor>
    <Abstract>Gets the number of control points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline2.html</Path>
    <Anchor>ac9a1023500eef408a899d7697ebe76f5</Anchor>
    <Abstract>Builds a shape from control points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; CubicHermiteSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a598f1d8096ac473923a358ce6b3788af</Anchor>
    <Abstract>Sets the out side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; CubicHermiteSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a70d143dbf3767a20ae16fc926c14163a</Anchor>
    <Abstract>Gets the out side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; CubicHermiteSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a0861117257db31cca10603432e353311</Anchor>
    <Abstract>Sets the number of segments between 2 control points Minimum of numSeg is 1. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; CubicHermiteSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a445c5edeb925343cf7069db5d141f30c</Anchor>
    <Abstract>Closes the spline. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; CubicHermiteSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a881c6e224fbfbaea1f24290b8c4a7879</Anchor>
    <Abstract>The number of segments between 2 control points. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; CubicHermiteSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a38bfe7e77061b1952f2f614f07b35740</Anchor>
    <Abstract>Whether the shape will be closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; CubicHermiteSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>ad2d07b0e264390ee4016aa415cc1ed36</Anchor>
    <Abstract>The &quot;out&quot; side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CubicHermiteSpline3</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::CubicHermiteSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline3.html</Path>
    <Abstract>Produces a path from Cubic Hermite control points. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControlPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Procedural::CubicHermiteSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline3.html</Path>
    <Anchor>a1fe2eff3313832f2d73bbfade079203b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline3.html</Path>
    <Anchor>a069619c20a398801ee4d0bb7a2fb3a80</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline3.html</Path>
    <Anchor>a06033887290eee8e07867aedb47b4214</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline3.html</Path>
    <Anchor>ac36a2ae83157d7ed5ab505f976c691ce</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline3.html</Path>
    <Anchor>ad671e8b6b1300875b3dbca47bb48339a</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safeGetPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline3.html</Path>
    <Anchor>a6d95877c9db9e4c1abd5ce8a28649f4e</Anchor>
    <Abstract>Safely gets a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline3.html</Path>
    <Anchor>a5e555f75be8627ecef97522c9b51fb6c</Anchor>
    <Abstract>Gets the number of control points. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CubicHermiteSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CubicHermiteSpline3.html</Path>
    <Anchor>a95992b02f6ac661ce38d7daeb6936f09</Anchor>
    <Abstract>Builds a path from control points. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline3&lt; CubicHermiteSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>ab845bfe8949bcdfdfce0ccf96f2760ef</Anchor>
    <Abstract>Sets the number of segments between 2 control points Minimum of numSeg is 1. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline3&lt; CubicHermiteSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>aae5f348744ff92a87ffebfd814ca81b3</Anchor>
    <Abstract>Closes the spline. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline3&lt; CubicHermiteSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>aa175c4230f072bd7cf470ebbf1fe0ed8</Anchor>
    <Abstract>The number of segments between 2 control points. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline3&lt; CubicHermiteSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>a569c776b415da3748a2a7feecfe42f6b</Anchor>
    <Abstract>Tells if the spline is closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CubicHermiteSplineControlPoint</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>Procedural::CubicHermiteSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1CubicHermiteSplineControlPoint.html</Path>
    <Abstract>Template control point for Cubic Hermite splines. </Abstract>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CubicHermiteSplineControlPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::CubicHermiteSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1CubicHermiteSplineControlPoint.html</Path>
    <Anchor>abfa24f9375db3754f0ac8bf84862addb</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CubicHermiteSplineControlPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::CubicHermiteSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1CubicHermiteSplineControlPoint.html</Path>
    <Anchor>aacb2449db26a05f7b0e394b3efcc25c8</Anchor>
    <Abstract>Constructor with arguments. </Abstract>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::CubicHermiteSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1CubicHermiteSplineControlPoint.html</Path>
    <Anchor>ad775aea7f22277b70b6c401c9d208010</Anchor>
    <Abstract>Position of the control point. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tangentBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::CubicHermiteSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1CubicHermiteSplineControlPoint.html</Path>
    <Anchor>a42603566ac414c03743480615ac0b452</Anchor>
    <Abstract>Tangent just before the control point. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tangentAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::CubicHermiteSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1CubicHermiteSplineControlPoint.html</Path>
    <Anchor>a917265d12bb0507fbcef74dc358116a0</Anchor>
    <Abstract>Tangent just after the control point. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autoTangentBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::CubicHermiteSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1CubicHermiteSplineControlPoint.html</Path>
    <Anchor>abefb13385624d3182d6c916b08d1eb60</Anchor>
    <Abstract>Auto tangent mode for the tangent just before the control point. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>autoTangentAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::CubicHermiteSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1CubicHermiteSplineControlPoint.html</Path>
    <Anchor>a775d5b8c98f12ef064dea65cf327fb3b</Anchor>
    <Abstract>Auto tangent mode for the tangent just after the control point. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Cycloid</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Abstract>Draw a cycloid. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Cycloid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a6c83076b9004ecbf0c7767d2fc995119</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a2a796fa6dac632a938f6cdb215b59c94</Anchor>
    <Abstract>Set the algorithm to for drawing. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a90151e65341b8acfa1c8c62495051d57</Anchor>
    <Abstract>Set the drawing colour for cycloid structure. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>acd457d2a58bc0c3eda86e3a2821f07cd</Anchor>
    <Abstract>Set the drawing colour for cycloid structure. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>aab3102f3673a8459ba29871a48361e00</Anchor>
    <Abstract>Set the relative center position of the cycloid main circle on x axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a93f1bb681796035df80d780cc6985ce0</Anchor>
    <Abstract>Set the relative center position of the cycloid main circle on y axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a3fb1e082a6cb8d7450051392cd2e0c30</Anchor>
    <Abstract>Set the parameter value. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPenSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>ae7b121626a7e2f035bfc199432ad385f</Anchor>
    <Abstract>Set the size for the pen to draw. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a3d9d92b5e19c47b34e06a6abba07f401</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAMETER_R</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a0f8f4109d19078cea3ac8fe07fca8f72ac5cb35776b30feeeeedd950c58de956b</Anchor>
    <Abstract>Set parameter R. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAMETER_r</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a0f8f4109d19078cea3ac8fe07fca8f72ad3b45843034f2f348684e0535d3a127c</Anchor>
    <Abstract>Set parameter r. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAMETER_d</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a0f8f4109d19078cea3ac8fe07fca8f72aa1833a53adcb531c6212cdecbcf1d362</Anchor>
    <Abstract>Set parameter d. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAMETER_e</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a0f8f4109d19078cea3ac8fe07fca8f72a8f71448924438b0f6c284020ca693336</Anchor>
    <Abstract>Set parameter e. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PARAMETER_k</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a0f8f4109d19078cea3ac8fe07fca8f72ab3d0c28eb32f9031959b646dcd177a66</Anchor>
    <Abstract>Set parameter k. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HYPOCYCLOID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a98fbecbf883bdef323d928d8dadc0a5ba16050d2a535ce6c629da5b09141d08a7</Anchor>
    <Abstract>Draw a Hypocycloid. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HYPOTROCHOID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a98fbecbf883bdef323d928d8dadc0a5babdd250fd5d2c13cea46d0c4f69f0111a</Anchor>
    <Abstract>Draw a Hypotrochoid. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EPICYCLOID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a98fbecbf883bdef323d928d8dadc0a5ba1d843d8643706502d4a6564cd4c4b024</Anchor>
    <Abstract>Draw a Epicycloid. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EPITROCHOID</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a98fbecbf883bdef323d928d8dadc0a5ba3aee24bd758f9f18c1888cb8583aa3ce</Anchor>
    <Abstract>Draw a Epitrochoid. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ROSE_CURVE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a98fbecbf883bdef323d928d8dadc0a5babed413392920fe64f55b8785dff3fdc5</Anchor>
    <Abstract>Draw a Rose curve. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LISSAJOUS_CURVE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Cycloid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Cycloid.html</Path>
    <Anchor>a98fbecbf883bdef323d928d8dadc0a5ba88c768e8c184abdafec39b76f42fdbc4</Anchor>
    <Abstract>Draw a Lissajous curve. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CylinderGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::CylinderGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderGenerator.html</Path>
    <Abstract>Generates a cylinder mesh along Y-axis. </Abstract>
    <DeclaredIn>ProceduralCylinderGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderGenerator.html</Path>
    <Anchor>ae5a8ac1de3bbe989c63e07086184e118</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralCylinderGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderGenerator.html</Path>
    <Anchor>a93bc7dbde9ccb28236460748834ef915</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralCylinderGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderGenerator.html</Path>
    <Anchor>ab860770d1e034fb3a767fbc8ec9f52fa</Anchor>
    <Abstract>Sets the number of segments when rotating around the cylinder&amp;#39;s axis (default=16) Minimum of numSegBa...</Abstract>
    <DeclaredIn>ProceduralCylinderGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderGenerator.html</Path>
    <Anchor>a1a9768b2af5382c16a41d5a75205e349</Anchor>
    <Abstract>Sets the number of segments along the height of the cylinder (default=1) Minimum of numSegHeight is 1...</Abstract>
    <DeclaredIn>ProceduralCylinderGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCapped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderGenerator.html</Path>
    <Anchor>a7253cd57d392446bd7ba752c2915caf6</Anchor>
    <Abstract>Sets whether the cylinder has endings or not (default=true) </Abstract>
    <DeclaredIn>ProceduralCylinderGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderGenerator.html</Path>
    <Anchor>a4bc419b868da8157961f88a9d4ac22a6</Anchor>
    <Abstract>Sets the radius of the cylinder (default=1) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralCylinderGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderGenerator.html</Path>
    <Anchor>aac5072b782378b27a829113872e997c7</Anchor>
    <Abstract>Sets the height of the cylinder (default=1) Height must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralCylinderGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; CylinderGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::CylinderUVModifier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::CylinderUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderUVModifier.html</Path>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderUVModifier.html</Path>
    <Anchor>a8d0e984bf8e5cc57feafdb436a132ee1</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CylinderUVModifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderUVModifier.html</Path>
    <Anchor>adb0e3dd6daf720e3e4784a8f5927d625</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderUVModifier.html</Path>
    <Anchor>a959b9bc0cfeca7739241396dcb18fd9c</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderUVModifier.html</Path>
    <Anchor>a2a09ee6913fb597fba2169e65c72841e</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::CylinderUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1CylinderUVModifier.html</Path>
    <Anchor>a25d4e811e373bbf2e8367112ebabe9de</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Dilate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Dilate</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Dilate.html</Path>
    <Abstract>Expands bright areas over darker areas. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Dilate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Dilate</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Dilate.html</Path>
    <Anchor>a921ed7532cf48b1efa139d1779eb9a07</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIterations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Dilate</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Dilate.html</Path>
    <Anchor>a6fcbc0fccf71d51632495145b35128bc</Anchor>
    <Abstract>Set number of iterations for dilating. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Dilate</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Dilate.html</Path>
    <Anchor>af3ea2dd380cac386df46ee5e9ca1723b</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Distort</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Distort</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Distort.html</Path>
    <Abstract>Apply normal (ie. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Distort</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Distort</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Distort.html</Path>
    <Anchor>af27704d48a7d452f98835695913d0315</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Distort</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Distort.html</Path>
    <Anchor>afc7703f91f9c1774651cfda1afb8e319</Anchor>
    <Abstract>Set parameter image for normal mapping. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPower</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Distort</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Distort.html</Path>
    <Anchor>ab2c5bf1ae564085f9c9e8dbe24aeb23a</Anchor>
    <Abstract>Set power for distort effect. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Distort</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Distort.html</Path>
    <Anchor>a288d5c5d2c62a9653e98bc009dcfddf7</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::EdgeDetection</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Abstract>Edge detection on input image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EdgeDetection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Anchor>abb5e223c3b9e5692b3cb05fc11dba547</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThresholdLow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Anchor>a58e7162779dc60d7c4886dea93972a60</Anchor>
    <Abstract>Set the lower threshold for canny filter. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThresholdHigh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Anchor>aeb1b0907835d9db47c2a52c28dea0ddb</Anchor>
    <Abstract>Set the upper threshold for canny filter. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSigma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Anchor>ae27e85a575a6eecf933c8fac3abad25b</Anchor>
    <Abstract>Set sigma constant for canny filter. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Anchor>ac4b1194a7d0c233ad5c715a06ea9eaa2</Anchor>
    <Abstract>Set the algorithm to sharp. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Anchor>aeb0892fe1d6e5ce3761ad41acf723ee7</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DETECTION_HOMOGENITY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Anchor>ab5e9dcda05f24f3da2ce928c6d870427af9f139de2b1e646e4648e982798991b6</Anchor>
    <Abstract>Homogenity edge detector. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DETECTION_DIFFERENCE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Anchor>ab5e9dcda05f24f3da2ce928c6d870427a335eee9a986013b9d7e1a74a4c1e1141</Anchor>
    <Abstract>Difference edge detector. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DETECTION_SOBEL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Anchor>ab5e9dcda05f24f3da2ce928c6d870427aacb0bc38040726bdfb933324705937eb</Anchor>
    <Abstract>Sobel edge detector. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DETECTION_CANNY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::EdgeDetection</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EdgeDetection.html</Path>
    <Anchor>ab5e9dcda05f24f3da2ce928c6d870427a1290bdf3c3de4bf0ab3ffaa245361434</Anchor>
    <Abstract>Canny edge detector. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::EllipseShape</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::EllipseShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseShape.html</Path>
    <Abstract>Builds a ellipse shape. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EllipseShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseShape.html</Path>
    <Anchor>a717666de15e93f4931b4f280377cbd5e</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseShape.html</Path>
    <Anchor>aa60c8c367edd0662245d99b964478178</Anchor>
    <Abstract>Sets radius in x direction Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseShape.html</Path>
    <Anchor>a7ffa8a70cfbcb229990be3d940caa9c2</Anchor>
    <Abstract>Sets radius in y direction Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseShape.html</Path>
    <Anchor>a59fc00b5739f412f4ced216cbaf69884</Anchor>
    <Abstract>Sets number of segments Minimum of numSeg is 1. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseShape.html</Path>
    <Anchor>a9224b22b726dd9f34c502aa98a1e80e6</Anchor>
    <Abstract>Builds the shape. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::EllipseTexture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Abstract>Draw an ellipse. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>EllipseTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a90777a48a7365c8a2d847fc2b9151bda</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a5763f0dc6f7fc366968c1d857dc4fac7</Anchor>
    <Abstract>Set the fill colour of the ellipse. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a40fac06e99398e8bc02ca46aaee5371a</Anchor>
    <Abstract>Set the fill colour of the ellipse. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a7b4cd9bdc3ade4f86a8cc5e1ceb58784</Anchor>
    <Abstract>Set the absolute radius of the ellipse on x axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a8d30b2a5cd74e637e520f8563c963cc5</Anchor>
    <Abstract>Set the relative radius of the ellipse on x axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>ae95e434146c15bcc99a519d473eff0c4</Anchor>
    <Abstract>Set the absolute radius of the ellipse on y axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>af13aba1de842f1d846c9f58a45aa0ad3</Anchor>
    <Abstract>Set the relative radius of the ellipse on y axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>abf91b7dab44394ad0afee8324805cdfc</Anchor>
    <Abstract>Set the absolute radius of the ellipse. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>ac5e1b6792dd0383cb506b8a07b190586</Anchor>
    <Abstract>Set the relative radius of the ellipse. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a53d58ffcc9b144f02fbfaecfe57f9665</Anchor>
    <Abstract>Set absolute x position of ellipse center point in px. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a063eae1b43b9ac3e32eb7e9cf4e26f6b</Anchor>
    <Abstract>Set relative x position of ellipse center point as Real. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a7eadcc622c0e1d85cda56f83d5ecf69a</Anchor>
    <Abstract>Set absolute y position of ellipse center point in px. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>af47c9d184fe3331ce837bb4ecebd3a2b</Anchor>
    <Abstract>Set relative y position of ellipse center point as Real. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a266d51ae443909d205976e136a415fd1</Anchor>
    <Abstract>Set the position of ellipse center point. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a86e07e35540e1b1eb176b2f8082dab17</Anchor>
    <Abstract>Set the position of ellipse center point. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>a8a0701386b7b56a50c3c45a90159c6bb</Anchor>
    <Abstract>Set the position of ellipse center point. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::EllipseTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1EllipseTexture.html</Path>
    <Anchor>af71c682d0611d73776f1ef979524ee2a</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Extruder</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Abstract>Extrudes a 2D shape along a path to build an extruded mesh. </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TrackMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>a3f582582bcb388f8579f1ea854e14f22</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Extruder</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>a8a77b702226de1c297d3c5fd18c3329f</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>a5e446fb4d3fddf5e18d2a9f7fe4c3fed</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShapeToExtrude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>a574079f73f627beab4100f32be3b3fee</Anchor>
    <Abstract>Sets the shape to extrude. </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultiShapeToExtrude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>a5dac8e692a0f5df5fee9952e82e65965</Anchor>
    <Abstract>Sets the multishape to extrude. </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExtrusionPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>a314c3633b1ec28056344ca2b294f13e7</Anchor>
    <Abstract>Sets the extrusion path. </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setExtrusionPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>a370ed84dee4ed540ff82e0b15e159aa2</Anchor>
    <Abstract>Sets the extrusion multipath. </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotationTrack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>ac5dddc314fe7e383e24ac2222e1879eb</Anchor>
    <Abstract>Sets the rotation track (optional) </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScaleTrack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>a207b491f213270d35418a3cb819d68d0</Anchor>
    <Abstract>Sets the scale track (optional) </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShapeTextureTrack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>a8a66aa0b62415209e8576e721b2438a2</Anchor>
    <Abstract>Sets the track that maps shape points to V texture coords (optional). </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathTextureTrack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>aa2b76c5226327e1d7b5a454f4b21e417</Anchor>
    <Abstract>Sets the track that maps path points to V texture coord (optional). </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCapped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Extruder</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Extruder.html</Path>
    <Anchor>ad7a003c53ac688b524b49d5f4b6986fc</Anchor>
    <Abstract>Sets whether caps are added to the extremities or not (not closed paths only) </Abstract>
    <DeclaredIn>ProceduralExtruder.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Extruder &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Flip</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Flip</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Flip.html</Path>
    <Abstract>Flip the image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Flip</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Flip</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Flip.html</Path>
    <Anchor>a084160e418ac2c4f78e6dc3f37e9cf90</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Flip</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Flip.html</Path>
    <Anchor>a9ebfc17fe9f7bbca23b142c2bc1366f1</Anchor>
    <Abstract>Set the axis to flip. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Flip</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Flip.html</Path>
    <Anchor>a23563e188f87e71f5458b8396601ccde</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLIP_HORIZONTAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Flip</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Flip.html</Path>
    <Anchor>a62c739a39c01dddfa1a5c67c9ef4d7c3a7b95bcec82ddc9581bfba43df88015ce</Anchor>
    <Abstract>Flip horizontal. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLIP_VERTICAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Flip</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Flip.html</Path>
    <Anchor>a62c739a39c01dddfa1a5c67c9ef4d7c3a05c1955d24c63d5074b2dbb608c161ec</Anchor>
    <Abstract>Flip vertical. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FLIP_POINT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Flip</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Flip.html</Path>
    <Anchor>a62c739a39c01dddfa1a5c67c9ef4d7c3ac50a380d3d8b5104a69be10f0cdbc755</Anchor>
    <Abstract>Flip middle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Glow</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Abstract>Render a glow. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Glow</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Anchor>a200183abaa7963dfe4f821a7ea700913</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Anchor>a05f1188836cdd2f06c3461c906710f2e</Anchor>
    <Abstract>Set the colour of the glow ellipse. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Anchor>a8db53951e38cc4c6c3ca116d609d017f</Anchor>
    <Abstract>Set the colour of the glow ellipse. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Anchor>a8716f08ed9ac8de456a42501543a7851</Anchor>
    <Abstract>Set the relative center position of the blur circle on x axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Anchor>a756e66938a932a5e28332f91ae0aaca4</Anchor>
    <Abstract>Set the relative center position of the blur circle on y axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Anchor>aeb65923efa1cf9908dcf6da360dcc631</Anchor>
    <Abstract>Set the relative radius of the blur circle in x direction. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Anchor>aaf934925ef194fe439d1c7ead2077c0a</Anchor>
    <Abstract>Set the relative radius of the blur circle in y direction. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Anchor>a0682c8660c1e1a16038b26c73dd14386</Anchor>
    <Abstract>Set alpha value of blur effect. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGamma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Anchor>a0eb95727ca597691203f16d9fea96379</Anchor>
    <Abstract>Set gamma value of blur effect. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Glow</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Glow.html</Path>
    <Anchor>a8dbb479b80872701f757dbb59183abda</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Gradient</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Abstract>Fills full image with given colour gradients. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Gradient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>a0c32713ee76bc094acef0aa037644b02</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>a02081b6678936a1c8ee2caccc4e3f357</Anchor>
    <Abstract>Set the colour in the top left corner of the image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>a7a4e978a070a5de5d5068e2e25d104bf</Anchor>
    <Abstract>Set the colour in the top left corner of the image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>a521dcdc918951f473e0bf98e0e7cac18</Anchor>
    <Abstract>Set the colour in the top right corner of the image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>a02a0bc99cd8966d396883fca20175aee</Anchor>
    <Abstract>Set the colour in the top right corner of the image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>a15e75d8cd4e7de0b25b943d712bf9c3d</Anchor>
    <Abstract>Set the colour in the bottom left corner of the image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>a8a22512ffcf784f301aade1afe3b80ae</Anchor>
    <Abstract>Set the colour in the bottom left corner of the image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>ae9e3551a8ab4801b1be537403ea1e2ea</Anchor>
    <Abstract>Set the colour in the bottom right corner of the image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>a4d4dec3cf9a03d2212da6621f837398d</Anchor>
    <Abstract>Set the colour in the bottom right corner of the image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>a9b855a2e760feb64e66268d2af05981a</Anchor>
    <Abstract>Sets the colours of the image corners. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Gradient</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Gradient.html</Path>
    <Anchor>acf8cd826aa33a5ee3aac8ad4ddce9b2e</Anchor>
    <Abstract>Run image generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::HelixPath</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::HelixPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HelixPath.html</Path>
    <Abstract>Produces a helix path. </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HelixPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HelixPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HelixPath.html</Path>
    <Anchor>a80ff5adc6c924e2d6a2684fb7062507c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HelixPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HelixPath.html</Path>
    <Anchor>aa9e659b570fa3274fae03c7ec1081a62</Anchor>
    <Abstract>Sets the height of the helix (default=1.0) Height must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HelixPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HelixPath.html</Path>
    <Anchor>a5a5452d5997b5efb9d6db11743d6a1d5</Anchor>
    <Abstract>Sets the radius of the helix (default = 1.0) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumRound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HelixPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HelixPath.html</Path>
    <Anchor>afeb3d77c9540a8851151e8e63918fc8b</Anchor>
    <Abstract>Sets the number of rounds (default = 5.0) You have to rotate more then 0 times! </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HelixPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HelixPath.html</Path>
    <Anchor>a40af9af40b957ec8d5c3a7518e921e25</Anchor>
    <Abstract>Sets number of segments along the path per turn Minimum of numSeg is 1. </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HelixPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HelixPath.html</Path>
    <Anchor>a1c8bad2ac95880f0f689b2287a0d7741</Anchor>
    <Abstract>Builds a shape from control points. </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::HemisphereUVModifier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::HemisphereUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HemisphereUVModifier.html</Path>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HemisphereUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HemisphereUVModifier.html</Path>
    <Anchor>aa11583182c2b92c68610355a428416b4</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HemisphereUVModifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HemisphereUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HemisphereUVModifier.html</Path>
    <Anchor>aa9585c7ff62f65adab0439fcd58bc96d</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HemisphereUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HemisphereUVModifier.html</Path>
    <Anchor>ad545f96e5e507446ebb4616918185dfa</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangleTop</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HemisphereUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HemisphereUVModifier.html</Path>
    <Anchor>a51abe4928f57e54d7297ec279e37ea1b</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangleBottom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::HemisphereUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1HemisphereUVModifier.html</Path>
    <Anchor>a879405b417d3d3422fcfddd013184051</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::IcoSphereGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::IcoSphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1IcoSphereGenerator.html</Path>
    <Abstract>Builds an icosphere mesh, ie a sphere built with equally sized triangles. </Abstract>
    <DeclaredIn>ProceduralIcoSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IcoSphereGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::IcoSphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1IcoSphereGenerator.html</Path>
    <Anchor>a70a37411a153faa67c996f64e3dc91b2</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralIcoSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::IcoSphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1IcoSphereGenerator.html</Path>
    <Anchor>a990e6a914a8818cc2b8fe1a30468257c</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralIcoSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::IcoSphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1IcoSphereGenerator.html</Path>
    <Anchor>a872cb9e719a80204265b0cb07937df00</Anchor>
    <Abstract>Sets the radius of the sphere (default=1) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralIcoSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumIterations</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::IcoSphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1IcoSphereGenerator.html</Path>
    <Anchor>af5f35f933156728ca20723bfb7682490</Anchor>
    <Abstract>Sets the number of iterations needed to build the sphere mesh. </Abstract>
    <DeclaredIn>ProceduralIcoSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; IcoSphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Image</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Image</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Image.html</Path>
    <Abstract>Load an image from a resource. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Image</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Image</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Image.html</Path>
    <Anchor>a3150b76f3970a2862c46387de9b8c61c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Image</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Image.html</Path>
    <Anchor>ab4a0e75cc994459dcdcecb46110dd4c6</Anchor>
    <Abstract>Set the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Image</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Image.html</Path>
    <Anchor>a16aba08ae40a3bf68f62ce97bc926b4f</Anchor>
    <Abstract>Run image generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::IntVector2</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::IntVector2</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1IntVector2.html</Path>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>x</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::IntVector2</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1IntVector2.html</Path>
    <Anchor>a318b64c9b74d01f484b21806a5b4bdba</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::IntVector2</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1IntVector2.html</Path>
    <Anchor>a773e5afd65da0f9684ddc290c973e251</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Invert</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Invert</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Invert.html</Path>
    <Abstract>Invert image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Invert</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Invert</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Invert.html</Path>
    <Anchor>ae43051f2909e90bc91562af6c88ff4b0</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Invert</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Invert.html</Path>
    <Anchor>ac413727d0c7b7837fa1d879697c22eb3</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Jitter</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Jitter</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Jitter.html</Path>
    <Abstract>Exchange pixels at random positions. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Jitter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Jitter</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Jitter.html</Path>
    <Anchor>a24a411e457cede8961c6d8c839739f78</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Jitter</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Jitter.html</Path>
    <Anchor>aa3c7d465063fc1b0922c4d570856d2f9</Anchor>
    <Abstract>Set the radius of the detection area. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Jitter</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Jitter.html</Path>
    <Anchor>a41035f240a90d641eaad73e4d281155b</Anchor>
    <Abstract>Set the seed for &quot;random&quot; number generator. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Jitter</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Jitter.html</Path>
    <Anchor>ae9aabb3d2d9c62917360b07477f3a171</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::KochanekBartelsSpline2</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::KochanekBartelsSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1KochanekBartelsSpline2.html</Path>
    <Abstract>Builds a shape from a Kochanek Bartels spline. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ControlPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Procedural::KochanekBartelsSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1KochanekBartelsSpline2.html</Path>
    <Anchor>a925a412016de316f1bedd2931958afa4</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::KochanekBartelsSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1KochanekBartelsSpline2.html</Path>
    <Anchor>aed682b7f5aed47f80d9a5f19a01ae459</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::KochanekBartelsSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1KochanekBartelsSpline2.html</Path>
    <Anchor>a12f0eb3c03a9c7609a897cf4c92321dc</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safeGetPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::KochanekBartelsSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1KochanekBartelsSpline2.html</Path>
    <Anchor>ac77d9f3749d411ea9d0d123647c18e58</Anchor>
    <Abstract>Safely gets a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::KochanekBartelsSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1KochanekBartelsSpline2.html</Path>
    <Anchor>a08efc7ffc9272d243b71e60000e8c43f</Anchor>
    <Abstract>Adds a control point to the spline. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::KochanekBartelsSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1KochanekBartelsSpline2.html</Path>
    <Anchor>acde841111d7067ea91406d35c682cc98</Anchor>
    <Abstract>Gets the number of control points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::KochanekBartelsSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1KochanekBartelsSpline2.html</Path>
    <Anchor>a42e2602b44309fb2a115aea19ee2b51b</Anchor>
    <Abstract>Builds a shape from control points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; KochanekBartelsSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a598f1d8096ac473923a358ce6b3788af</Anchor>
    <Abstract>Sets the out side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; KochanekBartelsSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a70d143dbf3767a20ae16fc926c14163a</Anchor>
    <Abstract>Gets the out side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; KochanekBartelsSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a0861117257db31cca10603432e353311</Anchor>
    <Abstract>Sets the number of segments between 2 control points Minimum of numSeg is 1. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; KochanekBartelsSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a445c5edeb925343cf7069db5d141f30c</Anchor>
    <Abstract>Closes the spline. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; KochanekBartelsSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a881c6e224fbfbaea1f24290b8c4a7879</Anchor>
    <Abstract>The number of segments between 2 control points. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; KochanekBartelsSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a38bfe7e77061b1952f2f614f07b35740</Anchor>
    <Abstract>Whether the shape will be closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; KochanekBartelsSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>ad2d07b0e264390ee4016aa415cc1ed36</Anchor>
    <Abstract>The &quot;out&quot; side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::KochanekBartelsSplineControlPoint</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>Procedural::KochanekBartelsSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1KochanekBartelsSplineControlPoint.html</Path>
    <Abstract>Template control point for KochanekBartels&amp;#39;s splines. </Abstract>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KochanekBartelsSplineControlPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::KochanekBartelsSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1KochanekBartelsSplineControlPoint.html</Path>
    <Anchor>a51bcfa93522989088649f6fc28e72223</Anchor>
    <Abstract>Constructor with arguments. </Abstract>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>KochanekBartelsSplineControlPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::KochanekBartelsSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1KochanekBartelsSplineControlPoint.html</Path>
    <Anchor>a786399ee388cc2b606f359af5aa0e2ac</Anchor>
    <Abstract>Constructor with tension=bias=continuity=0. </Abstract>
    <DeclaredIn>ProceduralSplines.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::KochanekBartelsSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1KochanekBartelsSplineControlPoint.html</Path>
    <Anchor>a4d195fd1a8c46ac1f3d6cd0a8f431734</Anchor>
    <Abstract>Position of the control point. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tension</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::KochanekBartelsSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1KochanekBartelsSplineControlPoint.html</Path>
    <Anchor>a5c63694cda9527f57905c397df179df5</Anchor>
    <Abstract>Tension of the control point. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>bias</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::KochanekBartelsSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1KochanekBartelsSplineControlPoint.html</Path>
    <Anchor>a8105225d87a7da4710a5089292f4431f</Anchor>
    <Abstract>Bias of the control point. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>continuity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::KochanekBartelsSplineControlPoint</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1KochanekBartelsSplineControlPoint.html</Path>
    <Anchor>ad1f511d2ffb566134095db4c882d3eb1</Anchor>
    <Abstract>Continuity of the control point. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Labyrinth</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Labyrinth</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Labyrinth.html</Path>
    <Abstract>Creates a labyrinth structured image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Labyrinth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Labyrinth</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Labyrinth.html</Path>
    <Anchor>afed03196c2e5ac70095ee24ac767346d</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Labyrinth</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Labyrinth.html</Path>
    <Anchor>ad36b0038843302b5a681e931ae0fccd4</Anchor>
    <Abstract>Set the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Labyrinth</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Labyrinth.html</Path>
    <Anchor>ae2113f9ee707b175a6ae3c72a126cc7e</Anchor>
    <Abstract>Sets the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Labyrinth</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Labyrinth.html</Path>
    <Anchor>ab73e3aa5691945c5dc298836b416fad7</Anchor>
    <Abstract>Set the seed for &quot;random&quot; number generator. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Labyrinth</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Labyrinth.html</Path>
    <Anchor>a10110d1267def5108e1fd2288a396853</Anchor>
    <Abstract>Run image generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Lathe</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Lathe</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lathe.html</Path>
    <Abstract>Builds a mesh by rotating a shape 360 degrees around Y-axis. </Abstract>
    <DeclaredIn>ProceduralLathe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lathe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lathe</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lathe.html</Path>
    <Anchor>abacda26e8fa352194729bc9f73258fde</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralLathe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lathe</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lathe.html</Path>
    <Anchor>a3acf20628e60cd0da87e1a8b557f7094</Anchor>
    <Abstract>Sets the number of segments when rotating around the axis (default=16) Minimum of numSeg is 1...</Abstract>
    <DeclaredIn>ProceduralLathe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAngleBegin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lathe</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lathe.html</Path>
    <Anchor>a92adcfe9df684567ccec8ca98928c040</Anchor>
    <Abstract>Sets the angle to begin lathe with (default=0) Automatically makes the lathe not closed. </Abstract>
    <DeclaredIn>ProceduralLathe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAngleEnd</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lathe</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lathe.html</Path>
    <Anchor>a547c073be3f1d5a997534db8cf4a1095</Anchor>
    <Abstract>Sets the angle to end lathe with (default=2PI) Automatically makes the lathe not closed. </Abstract>
    <DeclaredIn>ProceduralLathe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lathe</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lathe.html</Path>
    <Anchor>a6b11b5220a5faeaf73362304751665dc</Anchor>
    <Abstract>Sets whether the lathe is closed or not. </Abstract>
    <DeclaredIn>ProceduralLathe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCapped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lathe</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lathe.html</Path>
    <Anchor>ac3b036ed2345da348e82512c9f4a8c91</Anchor>
    <Abstract>Sets whether the lathe is capped or not (default=true) Only makes sense if the lathe is not closed...</Abstract>
    <DeclaredIn>ProceduralLathe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShapeToExtrude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lathe</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lathe.html</Path>
    <Anchor>afb2a482b5f1b68a066677a0d79fc4c3d</Anchor>
    <Abstract>Sets the shape to extrude If a multishape is already defined, auto-disables it The shape is assumed t...</Abstract>
    <DeclaredIn>ProceduralLathe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultiShapeToExtrude</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lathe</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lathe.html</Path>
    <Anchor>a3464d50e958f41ffea66df6df3ee21ce</Anchor>
    <Abstract>Sets the multiShape to extrude If a shape is already defined, auto-disables it The shapes in this mul...</Abstract>
    <DeclaredIn>ProceduralLathe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lathe</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lathe.html</Path>
    <Anchor>a4dfb70d825d46a170b9f80a94e47e32a</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralLathe.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Lathe &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Lerp</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Lerp</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lerp.html</Path>
    <Abstract>Linear interpolation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lerp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lerp</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lerp.html</Path>
    <Anchor>a3ab4a439a547685377ea60df1b5bca0c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImageA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lerp</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lerp.html</Path>
    <Anchor>a52b177391bc55881e00c2debe7c58192</Anchor>
    <Abstract>Set first image (a). </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImageB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lerp</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lerp.html</Path>
    <Anchor>aa2c88f92453c12e098707e5a2ed0e14c</Anchor>
    <Abstract>Set second image (b). </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lerp</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lerp.html</Path>
    <Anchor>a32d7130596ed868037d50fe2f8f4237e</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Line</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Line</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Line.html</Path>
    <Abstract>Represents a line in 3D. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Line</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Line</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Line.html</Path>
    <Anchor>a85e96cf5ea58abc74fad860735b7d952</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Line</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Line</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Line.html</Path>
    <Anchor>a0de05507ac270cdc3582dfa7f2ad91c8</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrom2Points</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Line</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Line.html</Path>
    <Anchor>a43cf13893aadd4d6ad37b8a455f69e49</Anchor>
    <Abstract>Builds the line between 2 points. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>shortestPathToPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Line</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Line.html</Path>
    <Anchor>a6bd0900e1ea2610677beea3b3bb91949</Anchor>
    <Abstract>Finds the shortest vector between that line and a point. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Line</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Line.html</Path>
    <Anchor>ad7402bef0cc29f3f18409d6ca69ca6fe</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Line</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Line.html</Path>
    <Anchor>af4aecde4c89e466cee16c78cc7981f4f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Line2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Line2D</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Line2D.html</Path>
    <Abstract>Represents a line in 2D. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Line2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Line2D</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Line2D.html</Path>
    <Anchor>a4c2cbd35f528e08de56684e2f168fe6f</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Line2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Line2D</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Line2D.html</Path>
    <Anchor>a704f7538274a2afc5271cde37ef272a9</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrom2Points</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Line2D</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Line2D.html</Path>
    <Anchor>a1dbf544d41063aee0c46ce4a0be2830a</Anchor>
    <Abstract>Builds the line between 2 points. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findIntersect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Line2D</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Line2D.html</Path>
    <Anchor>af68391ddadd271a2f740bfdede8f6445</Anchor>
    <Abstract>Computes the interesction between current segment and another segment. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::LinePath</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::LinePath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1LinePath.html</Path>
    <Abstract>Builds a line Path between 2 points. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>LinePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::LinePath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1LinePath.html</Path>
    <Anchor>af6816936d21354ca176cd3c1ca72aece</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPoint1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::LinePath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1LinePath.html</Path>
    <Anchor>a5c9e3c0e75ab093d2e8866e498d30742</Anchor>
    <Abstract>Sets first point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPoint2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::LinePath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1LinePath.html</Path>
    <Anchor>a80b253cd157a514ea551daf33d24210b</Anchor>
    <Abstract>Sets second point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::LinePath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1LinePath.html</Path>
    <Anchor>a2fb00febff5b9a2fefbe48c173c1c99f</Anchor>
    <Abstract>Sets the number of segments for this line Minimum of numSeg is 1. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>betweenPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::LinePath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1LinePath.html</Path>
    <Anchor>a32648e46e80ce783e4638145e97cc0a7</Anchor>
    <Abstract>Builds a linepath between 2 points. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::LinePath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1LinePath.html</Path>
    <Anchor>a7117bd067a507e77102dff854632e68a</Anchor>
    <Abstract>Outputs a path. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Lookup</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Lookup</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lookup.html</Path>
    <Abstract>Copy pixels from base input (x, y) to given coordinates from parameter image (red, green). </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Lookup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lookup</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lookup.html</Path>
    <Anchor>a2dd877013fe62ef7b74346cef40c953f</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setParameterImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lookup</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lookup.html</Path>
    <Anchor>ada9013ac83e1c9e95fea741cb5672f76</Anchor>
    <Abstract>Set parameter image for coordinates mapping. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Lookup</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Lookup.html</Path>
    <Anchor>adcab8976f6038036ac9dbca3747a76aa</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Marble</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Marble</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Marble.html</Path>
    <Abstract>Creates a marble structured image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Marble</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Marble</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Marble.html</Path>
    <Anchor>a5c100e7ed9ac62e544b28d1d05d3c444</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Marble</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Marble.html</Path>
    <Anchor>a709c9c6cfa347bcd1f093d9dcf9ca59e</Anchor>
    <Abstract>Set the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Marble</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Marble.html</Path>
    <Anchor>a173e0882614224f1146dd4fd80d1efa4</Anchor>
    <Abstract>Set the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Marble</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Marble.html</Path>
    <Anchor>aef7b723ae69e80dbad14c8bb3997e1b7</Anchor>
    <Abstract>Set the seed for &quot;random&quot; number generator. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Marble</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Marble.html</Path>
    <Anchor>a4229c711f86981174ca2fcc3f8fb2281</Anchor>
    <Abstract>Run image generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::MeshGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Abstract>Superclass of everything that builds meshes. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MeshGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a303ca58f8c4158d91ec2f2a7eda0f41a</Anchor>
    <Abstract>Default constructor Scene Manager is not set in OGRE root object. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a9acbc7efcca465c4cd339d96583e8986</Anchor>
    <Abstract>Overloaded by each generator to implement the specifics. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
    <DeclaredIn>ProceduralMeshGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::MeshLinearTransform</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::MeshLinearTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshLinearTransform.html</Path>
    <Abstract>Translates a mesh. </Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MeshLinearTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshLinearTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshLinearTransform.html</Path>
    <Anchor>aec813f1642d0b72f101fc55f87aafad4</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshLinearTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshLinearTransform.html</Path>
    <Anchor>ad864e3851c14c7a5bd85cb625c806ba7</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTranslation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshLinearTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshLinearTransform.html</Path>
    <Anchor>aa0b3616f4850f2c47ae1ed18fe955c00</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshLinearTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshLinearTransform.html</Path>
    <Anchor>a62a59b158234e8c16c9586acaf0d83fb</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::MeshUVTransform</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::MeshUVTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshUVTransform.html</Path>
    <Abstract>Linear transforms on a mesh&amp;#39;s UVs. </Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MeshUVTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshUVTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshUVTransform.html</Path>
    <Anchor>afbe8b1ab6be3cf0ab17a39111009a0a8</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshUVTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshUVTransform.html</Path>
    <Anchor>a88c1103dd74e63b8ae495a2f20623571</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshUVTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshUVTransform.html</Path>
    <Anchor>a070a5d9c27bef842c86c2023171728cc</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrigin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshUVTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshUVTransform.html</Path>
    <Anchor>a66839b3bd96dde37cdbf33635c5e8e24</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshUVTransform</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshUVTransform.html</Path>
    <Anchor>a5e4740ffcd4fbad85ba9ab24ff42de7d</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::MultiPath</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathIntersection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>af52ae12f9646f105d95ed6f83c91da2d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>a49d4e0916d8dede36f04d5baa71c7410</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>a767a36d6c310d5e06c9f0dc69d1b999e</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMultiPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>a862f33cf164f876a597c094214155404</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>a7a5f1a9f5cdda4ecce3fbaa1ad06408a</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPathCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>a85dc3793af4e8935674c80ff1b7ee2b5</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>a5ea034eebb9aa5e248777fc44274539b</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_calcIntersections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>a4c918e2e56ce898031899e7b575c7097</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntersectionsMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>a7db4955efed59263fbcdf88db7d6ecb4</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIntersections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>a02870dcdea28b68a68e1cc9995787e52</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNoIntersectionParts</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiPath</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiPath.html</Path>
    <Anchor>ad4ce59d55e3b23570ef88540ba3fb7c2</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::MultiPath::PathCoordinate</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::MultiPath::PathCoordinate</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1MultiPath_1_1PathCoordinate.html</Path>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PathCoordinate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::MultiPath::PathCoordinate</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1MultiPath_1_1PathCoordinate.html</Path>
    <Anchor>a1fb0ddae052eb0ed46710bc326055ad7</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator&lt;</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::MultiPath::PathCoordinate</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1MultiPath_1_1PathCoordinate.html</Path>
    <Anchor>a1c2f1bcf02269177055dc76416ab3d09</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pathIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MultiPath::PathCoordinate</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1MultiPath_1_1PathCoordinate.html</Path>
    <Anchor>ace06154e2108209b0f2e5f7609408ee2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pointIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MultiPath::PathCoordinate</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1MultiPath_1_1PathCoordinate.html</Path>
    <Anchor>ab3bba2fc8b5f9b60cc87fd57ab7817cd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::MultiShape</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Abstract>Holds a bunch of shapes. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultiShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>acad59de667fe3afcd4bfe60c6944c019</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultiShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a386a7288a9b27d33c96dab982ccb99ba</Anchor>
    <Abstract>Constructor from a single shape. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MultiShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a64cbf2d64161bded8220780134abbfd2</Anchor>
    <Abstract>Constructor from a variable number of shapes. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a6f14c753be5a72863bf0950f4187541a</Anchor>
    <Abstract>Adds a shape to the list of shapes. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clear</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a4a0d9004df71f5fb844d2deb41b93952</Anchor>
    <Abstract>Clears all the content. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a1250860d3db39cda1b38c12be741284d</Anchor>
    <Abstract>Returns the i-th shape. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a8581fc3dfd4ce1b82009d67bdd2367c7</Anchor>
    <Abstract>Returns the i-th shape. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>aafcb5fa6d346b372561c9985c9a6ff0e</Anchor>
    <Abstract>Builds an aggregated list of all points contained in all shapes. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getShapeCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a7365f8561952d09f4780da60c459d1f2</Anchor>
    <Abstract>Returns the number of shapes in that MultiShape. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addMultiShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>adfcf1a50bfb185393c9120503b929da0</Anchor>
    <Abstract>Append every shape of an other multishape to the current multiShape. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a8850901f43e49fcb4d5f81abc44daaca</Anchor>
    <Abstract>Outputs the Multi Shape to a Mesh, mostly for visualisation or debugging purposes. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPointInside</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>ac04e404baee92ed7dbc7182b7b3364c3</Anchor>
    <Abstract>Tells whether a point is located inside that multishape It assumes that all of the shapes in that mul...</Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a01794b3cf7d3b81cf1d00a15ce707c7f</Anchor>
    <Abstract>Tells whether multishape is &quot;closed&quot; or not. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a5402858f08fe55050dcd91687f75af8a</Anchor>
    <Abstract>Closes all shapes included in this multiShape. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOutsideRealOutside</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>af101e7fd4507e005a9faf20e7d97acfe</Anchor>
    <Abstract>Determines whether the outside as defined by user equals &quot;real&quot; outside. </Abstract>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildFromSegmentSoup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MultiShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MultiShape.html</Path>
    <Anchor>a3883830888a13d4ff199bc542a7f7c1f</Anchor>
    <DeclaredIn>ProceduralMultiShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Noise</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Noise</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Noise.html</Path>
    <Abstract>Fills full image with noise in a given colour. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Noise</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Noise</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Noise.html</Path>
    <Anchor>aef9198ad8a9f9d179d0c20ce64284268</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Noise</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Noise.html</Path>
    <Anchor>acef2cbe1ead9c9fce19410aa7cd8b344</Anchor>
    <Abstract>Set the colour of the noise. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Noise</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Noise.html</Path>
    <Anchor>a62ffd6ed5c1f3f08a2638289dac85169</Anchor>
    <Abstract>Set the colour of the noise. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Noise</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Noise.html</Path>
    <Anchor>a601d04bc0ad70243f9aebcfb504a0724</Anchor>
    <Abstract>Set the seed for &quot;random&quot; number generator. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Noise</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Noise.html</Path>
    <Anchor>a83919df2dbc1d5fef2b81774f5927e2b</Anchor>
    <Abstract>Set the type of noise generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Noise</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Noise.html</Path>
    <Anchor>a90dc8d99cbd3b64f0cefe0031c251595</Anchor>
    <Abstract>Run image generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NOISE_WHITE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Noise</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Noise.html</Path>
    <Anchor>a9a6737ee9667766388674922b87a156ba0ad0a1e10af4f847583894ee2a7b6a58</Anchor>
    <Abstract>White noise. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NOISE_PERLIN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Noise</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Noise.html</Path>
    <Anchor>a9a6737ee9667766388674922b87a156ba57c28f29a4b4cf364d3c2b197b0a74b6</Anchor>
    <Abstract>Perlin noise. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Normals</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Normals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Normals.html</Path>
    <Abstract>Convert height map to normal map. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Normals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Normals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Normals.html</Path>
    <Anchor>a9e931588ef31c0a208d885ccff038e49</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAmplify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Normals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Normals.html</Path>
    <Anchor>ae05ffab87f096f7aa4d29e6e7d5341f8</Anchor>
    <Abstract>Set amplify for normal calculation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Normals</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Normals.html</Path>
    <Anchor>acc2d7bfb09fb78cbdd84e3dd84d2dcb6</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::OilPaint</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::OilPaint</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1OilPaint.html</Path>
    <Abstract>Create an oil painted image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>OilPaint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::OilPaint</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1OilPaint.html</Path>
    <Anchor>a027d5a917506eba785bc9d1b1bccdd4f</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::OilPaint</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1OilPaint.html</Path>
    <Anchor>ad9750a1d0c435ada867bbdd72d4249a8</Anchor>
    <Abstract>Set radius size for calculation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setIntensity</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::OilPaint</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1OilPaint.html</Path>
    <Anchor>a8fd8de0be0d57e17f52158ec1bfb6468</Anchor>
    <Abstract>Set intensity for painting. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::OilPaint</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1OilPaint.html</Path>
    <Anchor>a106354c9d39f624a092c01e916933bcb</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Path</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Abstract>Succession of points in 3D space. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Path</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a88d32a11a6cd48890898915f77a9fda5</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a22bbb78291bb72b930bfde935313a31d</Anchor>
    <Abstract>Adds a point to the path, as a Vector3. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a086b2decd317fee44ba95543d900d2b5</Anchor>
    <Abstract>Adds a point to the path, using its 3 coordinates. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>ab193eefe76e7b0c5330f6858afca2b9b</Anchor>
    <Abstract>Inserts a point to the path. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a7881bd79c9f055a6457dda24e71758a7</Anchor>
    <Abstract>Inserts a point to the path. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a8857aef4090d230236fae0c2cfbe3eae</Anchor>
    <Abstract>Appends another path at the end of this one. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendPathRel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a49e9a8e8a55d43aee56612c5379bf45e</Anchor>
    <Abstract>Appends another path at the end of this one, relative to the last point of this path. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>ad3335c586b91e0124781e8484f0730a7</Anchor>
    <Abstract>Clears the content of the Path. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a2e09e40b3f6445c3e62d0b4a21c34b2a</Anchor>
    <Abstract>Define the path as being closed. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a88ec23a2357082752e9c4ce32ffc4674</Anchor>
    <Abstract>Tells if the path is closed or not. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a9600a8e500e7eaf5e68ed6f2bc21916f</Anchor>
    <Abstract>Gets the list of points as a vector of Vector3. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointsReference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>aaf608ee1fdb436139f6c2794f9497225</Anchor>
    <Abstract>Gets raw vector data of this path as a non-const reference. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>acf469600c11ecc403d57a1601f3d0801</Anchor>
    <Abstract>Safely gets a given point. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSegCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a805f0f43bc99cf7de23f23a5a9b644ef</Anchor>
    <Abstract>Gets the number of segments in the path Takes into accound whether path is closed or not...</Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectionAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>af9dd90c06de1f8fde41f9bfdfaa4e6b7</Anchor>
    <Abstract>Returns local direction after the current point. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectionBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>ac5e3ebd89ca6e47462a5ff927969f981</Anchor>
    <Abstract>Returns local direction after the current point. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAvgDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a33d00c99a0758087d7cf1f400f5f5cff</Anchor>
    <Abstract>Returns the local direction at the current point. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a116b87eaf5b8cafadbd5b1d04a3be7ba</Anchor>
    <Abstract>Returns the total lineic length of that shape. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLengthAtPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>aa8a82a7b601f68f84c6158cebb111f53</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a53a814fe1b5f8af114f1ec79408d83dd</Anchor>
    <Abstract>Gets a position on the shape with index of the point and a percentage of position on the segment...</Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>acba088ca1c2cb72ebaa819a39feb01e3</Anchor>
    <Abstract>Gets a position on the shape from lineic coordinate. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>aad490120ebd1007a7cb6bbaadb23ed63</Anchor>
    <Abstract>Outputs a mesh representing the path. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mergeKeysWithTrack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a363a295334e2ba313eb687327ba32919</Anchor>
    <Abstract>Creates a path with the keys of this path and extra keys coming from a track. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>aa55c550290880267a8eaddc786dab4b0</Anchor>
    <Abstract>Applies the given translation to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>aa646782459f46fd8daf8c0de627c13ed</Anchor>
    <Abstract>Applies the given translation to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a7a44ee2b9d271a35740e3c6310feaf63</Anchor>
    <Abstract>Applies the given scale to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a1b8e01c0a9d183b4e85e9a74a1c4cc62</Anchor>
    <Abstract>Applies the given scale to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a2e7347dded573cd9420079abde29b8d7</Anchor>
    <Abstract>Applies the given scale to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reflect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a949ddf774e3eae85b82cf7ab541cfcc1</Anchor>
    <Abstract>Reflect all points in this path against a zero-origined plane with a given normal. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSubPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a9f8748ca195a164a14d4868229da284f</Anchor>
    <Abstract>Extracts a part of the shape as a new path. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>aa787155aaeb0416384e8a4f7ca3a21d4</Anchor>
    <Abstract>Reverses direction of the path. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildFromSegmentSoup</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a607f5ca2d039e02f8a5796643b109953</Anchor>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertToShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Path</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Path.html</Path>
    <Anchor>a2bded2cc1f8b9507a4cf561a694d88cc</Anchor>
    <Abstract>Converts the path to a shape, with Y=0. </Abstract>
    <DeclaredIn>ProceduralPath.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Plane</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Plane</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Plane.html</Path>
    <Abstract>Extends the Ogre::Plane class to be able to compute the intersection between 2 planes. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Plane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Plane</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Plane.html</Path>
    <Anchor>adfaf8bb3ce00f12ed2c50ef1b1a9b73f</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Plane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Plane</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Plane.html</Path>
    <Anchor>a8de4352f4ae46c2f456b880dd9b2f8b1</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Plane</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Plane</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Plane.html</Path>
    <Anchor>a35c241cc31dc36a067a6132833bbcfec</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Plane</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Plane.html</Path>
    <Anchor>a2f3dae7ec987f5d394863fdbae3853bf</Anchor>
    <Abstract>Checks whether 2 planes intersect and compute intersecting line if it is the case. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDistance</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>a9548b13f88e65d98ea08ba01c8f2fad1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>ae0131ee8cf1c09587c5cc4541c3b6297</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>ab60532827d305cb7848f540be2cfb66b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>aa8a0b3abc05dcc47ef7ce79d98fb8a99</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normalise</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>a090aae792b4fecc6e8b1b5810f029edf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator!=</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>adae7d1d5d43cbe44cd40fc1e86784268</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator-</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>ac18f5c0caa1260b91ea2baf49ea32585</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator==</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>a06e8f4ea4698c322580c4299f6a12e07</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>projectVector</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>a54e83c81355e526a2b02d02625d42c4c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>redefine</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>a3edb29b896bac43b3a199460123e94b2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>redefine</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>a74dab1f3fb059277cd477aa683b238f7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>BOTH_SIDE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>aa5d44b14d6f032f3e0a26e83589180bca44420e1c49338ae721f298826e164935</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NEGATIVE_SIDE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>aa5d44b14d6f032f3e0a26e83589180bcaaf227c36d02442779fd4600d00580f5e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NO_SIDE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>aa5d44b14d6f032f3e0a26e83589180bcaad112821a6c39f0097136ba5df53052a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>POSITIVE_SIDE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>aa5d44b14d6f032f3e0a26e83589180bcac5f2b56ac439b77aad6dfc4031891be5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>a8e7de1712320968bee111002bc2938b8</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Ogre::Plane</Scope>
    </TokenIdentifier>
    <Path>class_ogre_1_1_plane.html</Path>
    <Anchor>a3f97462d3822f6add8c070048f6c2d92</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::PlaneGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::PlaneGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneGenerator.html</Path>
    <Abstract>Builds a plane mesh. </Abstract>
    <DeclaredIn>ProceduralPlaneGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlaneGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneGenerator.html</Path>
    <Anchor>ac2e21dfa6dc04075f3d5fcdc7d8bdaa5</Anchor>
    <DeclaredIn>ProceduralPlaneGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneGenerator.html</Path>
    <Anchor>a7cc80ae64cdfbc2b04205e8391a896c0</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralPlaneGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneGenerator.html</Path>
    <Anchor>a82fc93d4b85f40493149b037584a8856</Anchor>
    <Abstract>Sets the number of segements along local X axis Minimum of numSegX is 1. </Abstract>
    <DeclaredIn>ProceduralPlaneGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneGenerator.html</Path>
    <Anchor>a8ed3cb4eae16e14bc26cefbc22664ad8</Anchor>
    <Abstract>Sets the number of segments along local Y axis Minimum of numSegY is 1. </Abstract>
    <DeclaredIn>ProceduralPlaneGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneGenerator.html</Path>
    <Anchor>af14b938fb9cab89221fc8cadd28a2fba</Anchor>
    <Abstract>Sets the normal of the plane Normal must not be null. </Abstract>
    <DeclaredIn>ProceduralPlaneGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneGenerator.html</Path>
    <Anchor>a5a7a7717ebd913ffb9702d422584d64a</Anchor>
    <Abstract>Sets the size of the plane along local X axis X size must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralPlaneGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneGenerator.html</Path>
    <Anchor>aa62b50057b62dc7b346d6c7e89f93a03</Anchor>
    <Abstract>Sets the size of the plane along local Y axis Y size must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralPlaneGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneGenerator.html</Path>
    <Anchor>a816775ce0e16c0ec4ca6818a00730126</Anchor>
    <Abstract>Sets the size (default=1,1) </Abstract>
    <DeclaredIn>ProceduralPlaneGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PlaneGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::PlaneUVModifier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::PlaneUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneUVModifier.html</Path>
    <Abstract>Recomputes the mesh&amp;#39;s UVs based on its projection on a plane. </Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PlaneUVModifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneUVModifier.html</Path>
    <Anchor>a040769606d9b4ac433618226f1ba36f4</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaneNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneUVModifier.html</Path>
    <Anchor>adabcd63d3b390d7755c53c4e933876ed</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneUVModifier.html</Path>
    <Anchor>ad7e59df78e132948fd1e90c884f49a57</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaneCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneUVModifier.html</Path>
    <Anchor>a82dcf4f7c634184fb2deb26c7f5d51c8</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPlaneSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneUVModifier.html</Path>
    <Anchor>a95e363e6b4ce0c429984aac3360115d6</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PlaneUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PlaneUVModifier.html</Path>
    <Anchor>a29d00d65f9fdb6747e94b49dbd50df85</Anchor>
    <Abstract>Input triangle buffer must be set </Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Polygon</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Abstract>Draw a polygon. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Polygon</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a682053ac4476591088a23db286049a4c</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a43cc937b8621bbe4189a61ae4ee60cdf</Anchor>
    <Abstract>Set the fill colour of the polygon. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a67ce4a93505f905ac481086dcb703a24</Anchor>
    <Abstract>Set the fill colour of the polygon. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a40a6d3a10018aaed11c95bcc5bf406c0</Anchor>
    <Abstract>Set the absolute radius of the polygon edges. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>ab74300dfbf92607f8644f0643a62f026</Anchor>
    <Abstract>Set the relative radius of the polygon edges. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a6e5ab038b3c61847fe9d76d52d2fb95d</Anchor>
    <Abstract>Set absolute x position of polygon center point in px. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a669be50c353f4914e351ce2465f6c8c2</Anchor>
    <Abstract>Set relative x position of polygon center point as Real. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a64fd3988e838d2c7eedee4a9053a486a</Anchor>
    <Abstract>Set absolute y position of polygon center point in px. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a3f40e08a7da78806f0c5fe3fa380d0b1</Anchor>
    <Abstract>Set relative y position of polygon center point as Real. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>abf2402027ef141341b2c92515b48cce0</Anchor>
    <Abstract>Set the position of polygon center point. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a3ee9b15cc923213b2684b5c41f12a8a9</Anchor>
    <Abstract>Set the position of polygon center point. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a69eeb896b1960c8761a1e96baa28b44d</Anchor>
    <Abstract>Set the position of polygon center point. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSides</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a33fceb61d3a324156007e55564d794ce</Anchor>
    <Abstract>Set number of polygon sides. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Polygon</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Polygon.html</Path>
    <Anchor>a175c2e2f9b2c65ae7c7098a7a51a910e</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::PrismGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::PrismGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PrismGenerator.html</Path>
    <Abstract>Generates a prism mesh centered on the origin. </Abstract>
    <DeclaredIn>ProceduralPrismGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PrismGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PrismGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PrismGenerator.html</Path>
    <Anchor>aeada47174ed9042010bb5c6c903c75ed</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralPrismGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PrismGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PrismGenerator.html</Path>
    <Anchor>a1961419701357b2e2606ff1951d71c9d</Anchor>
    <Abstract>Sets the radius of the prism (default=1) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralPrismGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PrismGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PrismGenerator.html</Path>
    <Anchor>a6963c4ad0f01f9523994c89b1b0a753c</Anchor>
    <Abstract>Sets the height of the prism (default=1) Height must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralPrismGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSides</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PrismGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PrismGenerator.html</Path>
    <Anchor>a27dbaa6982c00d9e3752de8211ae73ec</Anchor>
    <Abstract>Sets the number of prism sides (default=3) Minimum of numSides is 3. </Abstract>
    <DeclaredIn>ProceduralPrismGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PrismGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PrismGenerator.html</Path>
    <Anchor>a10fa95df80229ce5661ba6364134784f</Anchor>
    <Abstract>Sets the number of segments along the height of the prism (default=1) Minimum of numSegHeight is 1...</Abstract>
    <DeclaredIn>ProceduralPrismGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCapped</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PrismGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PrismGenerator.html</Path>
    <Anchor>af5ce60a99c816e7ff48e48931bb6f64f</Anchor>
    <Abstract>Sets whether the prism has endings or not (default=true) </Abstract>
    <DeclaredIn>ProceduralPrismGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::PrismGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1PrismGenerator.html</Path>
    <Anchor>a79fdf8061612d793abb7379e8b95d695</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralPrismGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; PrismGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::RandomPixels</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::RandomPixels</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RandomPixels.html</Path>
    <Abstract>Draw a number of pixels at random positions. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RandomPixels</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RandomPixels</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RandomPixels.html</Path>
    <Anchor>adf24b4c3a994395a34e993c15f893ff2</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RandomPixels</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RandomPixels.html</Path>
    <Anchor>a5ab7301bd826038aa2b5a4c5a2fda90f</Anchor>
    <Abstract>Set the colour of the pixel to paint. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RandomPixels</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RandomPixels.html</Path>
    <Anchor>a08167c24560c0151ad4ec3a227d57472</Anchor>
    <Abstract>Set the colour of the pixel to paint. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RandomPixels</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RandomPixels.html</Path>
    <Anchor>a645985bf528fee0068175adcc1f63ca7</Anchor>
    <Abstract>Set the seed for &quot;random&quot; number generator. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RandomPixels</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RandomPixels.html</Path>
    <Anchor>a0e1ca1756b353ed8afe0f8c29eb87d90</Anchor>
    <Abstract>Set the number of random painted pixels. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RandomPixels</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RandomPixels.html</Path>
    <Anchor>a21bc202347d04dd0502c1602ae55d032</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::RectangleShape</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::RectangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleShape.html</Path>
    <Abstract>Builds a rectangular shape. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangleShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleShape.html</Path>
    <Anchor>ad056aa7775fb2d9fa21cb8e0dce9c82e</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleShape.html</Path>
    <Anchor>a79b02d5676d95e7a0116a540cdffd3e8</Anchor>
    <Abstract>Sets width Width must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleShape.html</Path>
    <Anchor>af82b35289407a3c8651afad66ebbb087</Anchor>
    <Abstract>Sets height Height must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleShape.html</Path>
    <Anchor>a2961792774edbeba75c6cf53ee94da49</Anchor>
    <Abstract>Builds the shape. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::RectangleTexture</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Abstract>Draw a rectangle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RectangleTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>adf1d6a7994aa39de268a581ef9070e0b</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>ad055b6765f8575627cbee1a16617b24f</Anchor>
    <Abstract>Set the fill colour of the rectangle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a384bb754c4ea8d31c66458d8cc0ba238</Anchor>
    <Abstract>Set the fill colour of the rectangle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setX1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a90b17a83c28ab47f6193abe558b70082</Anchor>
    <Abstract>Set absolute x position of top left start point of the rectangle in px. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setX1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>ab14cf4c7b83b9ee6b7d5345cce445604</Anchor>
    <Abstract>Set relative x position of top left start point of the rectangle as Real. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setY1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a024bce257ce8955d9aa6a90d5e9d6dfa</Anchor>
    <Abstract>Set absolute y position of top left start point of the rectangle in px. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setY1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>ab03949ae5fa3b3850c143e63472aed16</Anchor>
    <Abstract>Set relative y position of top left start point of the rectangle as Real. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setX2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a79e4dbbb3f433e4ba55f7a2c0144cf97</Anchor>
    <Abstract>Set absolute x position of bottom right end point of the rectangle in px. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setX2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a14c429573af227d509f2234c11f820c9</Anchor>
    <Abstract>Set relative x position of bottom right end point of the rectangle as Real. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setY2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>ae0fec4ee9ae762dbfa001f2d8c39ffe8</Anchor>
    <Abstract>Set absolute y position of bottom right end point of the rectangle in px. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setY2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a23a9f203d59d3c8ae1930dc159fecf58</Anchor>
    <Abstract>Set relative y position of bottom right end point of the rectangle as Real. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a5b809bdb15b10c5b0ab08a46515819ea</Anchor>
    <Abstract>Set the full rectangle coordinates. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a111cbb9c7af8b6af2a582a5539507ce5</Anchor>
    <Abstract>Set the full rectangle coordinates. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a06c0d252ad2d96e72a1532d440e6df3c</Anchor>
    <Abstract>Set the full rectangle coordinates. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>ab2608f7706ddcf571d0d87099b7373cc</Anchor>
    <Abstract>Set the full rectangle coordinates. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRectangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a3d2b8d13bc4f41f4bec43b17d2ae96c1</Anchor>
    <Abstract>Set the full rectangle coordinates. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RectangleTexture</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RectangleTexture.html</Path>
    <Anchor>a027a9b14f56756e0955ad75e57d6909b</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::RotationZoom</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Abstract>Rotate &amp; zoom image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RotationZoom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Anchor>aa0ac6337295692e0010e157ec2c46249</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Anchor>ab9c763d8061c80e2088981dfb705a62b</Anchor>
    <Abstract>Set the relative center position of the rotation on x axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Anchor>a51f08a8697d6bd90380e1755de81963e</Anchor>
    <Abstract>Set the relative center position of the rotation on y axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Anchor>a225da7d9504a1b930e09cb65205956fa</Anchor>
    <Abstract>Set the zoom factor in x direction. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setZoomY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Anchor>ab498ef6f3f9db665bad31599a8aae0b0</Anchor>
    <Abstract>Set the zoom factor in y direction. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Anchor>adce71875a8e033702f8dfa702797a6a3</Anchor>
    <Abstract>Set the rotation angle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Anchor>adf461030e037ab6991c4580d37e07911</Anchor>
    <Abstract>Set the rotation angle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRotation</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Anchor>ac7cc22f3247d429a68237653d4837434</Anchor>
    <Abstract>Set the rotation angle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setWrap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Anchor>ac74c6af680654c8612bdb1a8de05a41e</Anchor>
    <Abstract>Set wrap. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RotationZoom</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RotationZoom.html</Path>
    <Anchor>ac926d88ad74694ea6b84096b9989ca8e</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::RoundedBoxGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Abstract>Builds a rounded box. </Abstract>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RoundedBoxGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Anchor>a87c99cff19f39dd4372caed4d4ae121b</Anchor>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Anchor>a88d20a0e26a11ffd7b405d7d27344ceb</Anchor>
    <Abstract>Sets the size of the box along X axis X size must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Anchor>ac154c4277e25e2664931f5a8aeb62d65</Anchor>
    <Abstract>Sets the size of the box along Y axis Y size must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSizeZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Anchor>a6c6daaa9aff38919f0dfbeaaf5a8845a</Anchor>
    <Abstract>Sets the size of the box along Z axis Z size must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Anchor>af50812cf9ca2c676bc3c86e14cdb9512</Anchor>
    <Abstract>Sets the size (default=1,1,1) </Abstract>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Anchor>abac5e5a5ba1a38ae9da4360bbc1e6737</Anchor>
    <Abstract>Sets the number of segments along X axis (default=1) Minimum of numSegX is 1. </Abstract>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Anchor>a76d23363e8e5c28bc9eacbef0c54f309</Anchor>
    <Abstract>Sets the number of segments along Y axis (default=1) Minimum of numSegY is 1. </Abstract>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegZ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Anchor>ae5233c34c106e7c8aee08a5f5f03663f</Anchor>
    <Abstract>Sets the number of segments along Z axis (default=1) Minimum of numSegZ is 1. </Abstract>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setChamferSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Anchor>ab7c97ffaebf3dbc036c4a1fb7e06c47f</Anchor>
    <Abstract>Sets the size of the chamfer, ie the radius of the rounded part chamferSize must be larger than 0! ...</Abstract>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedBoxGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedBoxGenerator.html</Path>
    <Anchor>ade3bce3b19be5dd88be9b14264eacc42</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralRoundedBoxGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; RoundedBoxGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::RoundedCornerSpline2</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::RoundedCornerSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline2.html</Path>
    <Abstract>Produces a shape from Cubic Hermite control points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RoundedCornerSpline2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline2.html</Path>
    <Anchor>a9a2fb85bf10747dcda4827144451543f</Anchor>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline2.html</Path>
    <Anchor>aa52c048eddab7cbede766cac83335199</Anchor>
    <Abstract>Sets the radius of the corners. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline2.html</Path>
    <Anchor>a5b5c6623bd777286c7ebfbaa714ae39a</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline2.html</Path>
    <Anchor>af23b56ef9abb3b2d275ed89d3a484d3b</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safeGetPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline2.html</Path>
    <Anchor>a1e3ac006d8b890934f421d339042b1fc</Anchor>
    <Abstract>Safely gets a control point. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline2.html</Path>
    <Anchor>aeee0172f718c51bcd095e8674cb99e41</Anchor>
    <Abstract>Gets the number of control points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline2</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline2.html</Path>
    <Anchor>a542ffa9c5249f317fbf5aab67a93e779</Anchor>
    <Abstract>Builds a shape from control points The path contains no points. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; RoundedCornerSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a598f1d8096ac473923a358ce6b3788af</Anchor>
    <Abstract>Sets the out side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; RoundedCornerSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a70d143dbf3767a20ae16fc926c14163a</Anchor>
    <Abstract>Gets the out side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; RoundedCornerSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a0861117257db31cca10603432e353311</Anchor>
    <Abstract>Sets the number of segments between 2 control points Minimum of numSeg is 1. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline2&lt; RoundedCornerSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a445c5edeb925343cf7069db5d141f30c</Anchor>
    <Abstract>Closes the spline. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; RoundedCornerSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a881c6e224fbfbaea1f24290b8c4a7879</Anchor>
    <Abstract>The number of segments between 2 control points. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; RoundedCornerSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>a38bfe7e77061b1952f2f614f07b35740</Anchor>
    <Abstract>Whether the shape will be closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOutSide</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline2&lt; RoundedCornerSpline2 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline2.html</Path>
    <Anchor>ad2d07b0e264390ee4016aa415cc1ed36</Anchor>
    <Abstract>The &quot;out&quot; side of the shape. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::RoundedCornerSpline3</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::RoundedCornerSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline3.html</Path>
    <Abstract>Produces a path by rounding corners of a straight-lines path. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RoundedCornerSpline3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline3.html</Path>
    <Anchor>a61cb1157d9a4ea71d6890bf7c4fb26b8</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline3.html</Path>
    <Anchor>a3e41c85c72cc4934b499a4494c2ff9dd</Anchor>
    <Abstract>Sets the radius of the corners (default = 0.1) </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline3.html</Path>
    <Anchor>a191543e33d6340c6c848fef232c27a72</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline3.html</Path>
    <Anchor>a2632a73db9e8dd958d11decd371a59e0</Anchor>
    <Abstract>Adds a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safeGetPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline3.html</Path>
    <Anchor>aee1b37d4feebe00cce22ffe4b8dcf79d</Anchor>
    <Abstract>Safely gets a control point. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline3.html</Path>
    <Anchor>a435ceadcfadb94cadde3c36268072706</Anchor>
    <Abstract>Gets the number of control points. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizePath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::RoundedCornerSpline3</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1RoundedCornerSpline3.html</Path>
    <Anchor>af967ce3fb4f0cdb1c1c90dcd36f8dad9</Anchor>
    <Abstract>Builds a shape from control points The path contains no points. </Abstract>
    <DeclaredIn>ProceduralPathGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline3&lt; RoundedCornerSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>ab845bfe8949bcdfdfce0ccf96f2760ef</Anchor>
    <Abstract>Sets the number of segments between 2 control points Minimum of numSeg is 1. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::BaseSpline3&lt; RoundedCornerSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>aae5f348744ff92a87ffebfd814ca81b3</Anchor>
    <Abstract>Closes the spline. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumSeg</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline3&lt; RoundedCornerSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>aa175c4230f072bd7cf470ebbf1fe0ed8</Anchor>
    <Abstract>The number of segments between 2 control points. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mClosed</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::BaseSpline3&lt; RoundedCornerSpline3 &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1BaseSpline3.html</Path>
    <Anchor>a569c776b415da3748a2a7feecfe42f6b</Anchor>
    <Abstract>Tells if the spline is closed or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Segment</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Segment</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Segment.html</Path>
    <Abstract>Colours image segments based on threshold. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segment</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Segment</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Segment.html</Path>
    <Anchor>a2237f7543c6b5cc040786c0996eefbe1</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourSource</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Segment</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Segment.html</Path>
    <Anchor>a2e4f17d46ff6366999d7f98bbabfd7cf</Anchor>
    <Abstract>Set parameter image for colour source. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Segment</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Segment.html</Path>
    <Anchor>a4f18046d79501f54f7a84fc25e6a7326</Anchor>
    <Abstract>Set threshold value. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Segment</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Segment.html</Path>
    <Anchor>a1cee8d3b1efe3435f76d7fd0090bbdaa</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Segment2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Segment2D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment2D.html</Path>
    <Abstract>Represents a 2D segment. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segment2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Segment2D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment2D.html</Path>
    <Anchor>aa9ad1fe477201acd5723bad9b647aafd</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segment2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Segment2D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment2D.html</Path>
    <Anchor>a04b5976d85898cd7125e1005a9f5de45</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findIntersect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Segment2D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment2D.html</Path>
    <Anchor>a2f360df1452d8dff3b3bb186d5489aee</Anchor>
    <Abstract>Computes the interesction between current segment and another segment. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>intersects</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Segment2D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment2D.html</Path>
    <Anchor>aecadb4ff5adc24376032feed4f77f429</Anchor>
    <Abstract>Tells whether this segments intersects the other segment. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Segment2D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment2D.html</Path>
    <Anchor>abd1632e511a87c1373452fb6c6ae6112</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Segment2D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment2D.html</Path>
    <Anchor>a5c2f3c9deb643158ac8183355878883c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Segment3D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Segment3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment3D.html</Path>
    <Abstract>Represents a 3D segment. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segment3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Segment3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment3D.html</Path>
    <Anchor>a40297b43c69d2984bfa79ef3f9837546</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Segment3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Segment3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment3D.html</Path>
    <Anchor>a61a8dbbe46915cebad995c6d6a6d1e85</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>epsilonEquivalent</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Segment3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment3D.html</Path>
    <Anchor>a48b5342e208a7e8bf5de770a3e256164</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>orderedCopy</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Segment3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment3D.html</Path>
    <Anchor>a5433517b8776b378c022e70afbbce240</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Segment3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment3D.html</Path>
    <Anchor>abb46d5cd017938648f7a814f8559df16</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Segment3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Segment3D.html</Path>
    <Anchor>a884c4f8065ace0f6ef60f00d58170528</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Shape</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Abstract>Describes a succession of interconnected 2D points. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Shape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a63dc22df705d120766a3d14bbab1422a</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>adb0c1195d73e0ef5d2e23064cd833ae6</Anchor>
    <Abstract>Adds a point to the shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a2577a44694c49c01eee5790260713790</Anchor>
    <Abstract>Adds a point to the shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a423c85c8de3678374555c075717f20d3</Anchor>
    <Abstract>Inserts a point to the shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>insertPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a2e92419d52478b10a70898e51d48133e</Anchor>
    <Abstract>Inserts a point to the shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPointRel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>aa06fbcb0a694dca26eb9e8b8aeca5fa9</Anchor>
    <Abstract>Adds a point to the shape, relative to the last point added. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPointRel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>ab02919afa4011b448d343258df04ca71</Anchor>
    <Abstract>Adds a point to the shape, relative to the last point added. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>add2172c074017eb1390ab9dfa290e4b6</Anchor>
    <Abstract>Appends another shape at the end of this one. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>appendShapeRel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a0f3aa0f596f4dcbf930facd650176d5c</Anchor>
    <Abstract>Appends another shape at the end of this one, relative to the last point of this shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>extractSubShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>ae19a486a8672440a23e8052521860a93</Anchor>
    <Abstract>Extracts a part of the shape as a new shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reverse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a4791ad562de373ae1fc3ac93724f651c</Anchor>
    <Abstract>Reverses direction of the shape The outside is preserved. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a4e7f54ac0851b51bcb66cfe674cf5c21</Anchor>
    <Abstract>Clears the content of the shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertToPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>aceed3c289fd8ae19f2f562c3931c4820</Anchor>
    <Abstract>Converts the shape to a path, with Y=0. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>convertToTrack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a2ddf88850c56c2006798028cd965eb25</Anchor>
    <Abstract>Outputs a track, with Key=X and Value=Y. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>aa1917973d029fba3aa0ae19e727b7201</Anchor>
    <Abstract>Gets a copy of raw vector data of this shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointsReference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a41e5cb1366f20429b1b10c7e968f58c9</Anchor>
    <Abstract>Gets raw vector data of this shape as a non-const reference. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointsReference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a2f17a867eb1ed2660bb3c377585d9de8</Anchor>
    <Abstract>Gets raw vector data of this shape as a non-const reference. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a68cd6785716083d942a4f0c6e6c12202</Anchor>
    <Abstract>Bounds-safe method to get a point : it will allow you to go beyond the bounds. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getBoundedIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>afd3a354b30c238aeeb174d690d208175</Anchor>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPointCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a572e449bd27a1f8b190f73e9e35d3e41</Anchor>
    <Abstract>Gets number of points in current point list. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>close</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a532ca40b3ec4bb54edf0492c47705355</Anchor>
    <Abstract>Makes the shape a closed shape, ie it will automatically connect the last point to the first point...</Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOutSide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>aa92be43a8ecffb997cee15510e10d2c5</Anchor>
    <Abstract>Sets which side (left or right) is on the outside of the shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getOutSide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>aab7078feb3e5efdacc20cae3e2abc148</Anchor>
    <Abstract>Gets which side is out. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>switchSide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a77d158f5c6490c5eb0d0a03a9f4ff70d</Anchor>
    <Abstract>Switches the inside and the outside. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSegCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a3e2d67329517df516392abb2b740e23c</Anchor>
    <Abstract>Gets the number of segments in that shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isClosed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>aca082c97634ecd1c656a6237eb618477</Anchor>
    <Abstract>Gets whether the shape is closed or not. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectionAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>aac32c605d0ea6f680505577a59b24ae3</Anchor>
    <Abstract>Returns local direction after the current point. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getDirectionBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a459ac9d2b06e832c09469ae444e0feeb</Anchor>
    <Abstract>Returns local direction after the current point. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAvgDirection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>ac1cbf1092b8810f7e26d41f6075fa6c7</Anchor>
    <Abstract>Gets the average between before direction and after direction. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a316d3c81b31df81e862b2dfacefe62fb</Anchor>
    <Abstract>Gets the shape normal just after that point. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNormalBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a46ff7bcdad11c584f682849f47935096</Anchor>
    <Abstract>Gets the shape normal just before that point. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAvgNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a6ad0f7c1c02f894e3e91f04e6ed1a460</Anchor>
    <Abstract>Gets the &quot;normal&quot; of that point ie an average between before and after normals. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>ab5c04eebf1dd874aa080b57631831cfc</Anchor>
    <Abstract>Outputs a mesh representing the shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_appendToManualObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a21df98689c08deac24ba65634a55754a</Anchor>
    <Abstract>Appends the shape vertices to a manual object being edited. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isPointInside</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>aa3b9e54c476bbd4fc5767c828b98c057</Anchor>
    <Abstract>Tells whether a point is inside a shape or not. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>booleanIntersect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a2aec60b87f94f5542f9236d27959a617</Anchor>
    <Abstract>Computes the intersection between this shape and another one. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>booleanUnion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a4597a880c199f1e5c01a436b09688880</Anchor>
    <Abstract>Computes the union between this shape and another one. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>booleanDifference</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a25a41a800f46556b26cc2f971b32e4d0</Anchor>
    <Abstract>Computes the difference between this shape and another one. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findRealOutSide</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a6b37849cbf9f3380cab783976e366f7b</Anchor>
    <Abstract>On a closed shape, find if the outside is located on the right or on the left. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isOutsideRealOutside</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a6e5867226ecb8a4c509ea41960a70610</Anchor>
    <Abstract>Determines whether the outside as defined by user equals &quot;real&quot; outside. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mergeKeysWithTrack</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>ad1230e28c59830228d1d715195176b8a</Anchor>
    <Abstract>Creates a shape with the keys of this shape and extra keys coming from a track. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a3b437a1d990b1149c85f0c6a74a63f5f</Anchor>
    <Abstract>Applies the given translation to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a8376a15aa9813c1a868f60f82f7d053e</Anchor>
    <Abstract>Applies the given translation to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>acadd4adc2b932e029fdedbb5f16f6c84</Anchor>
    <Abstract>Applies the given rotation to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a870f6c5629162201e192750d397f3022</Anchor>
    <Abstract>Applies the given scale to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>ad001239884a722cdd2601b3d9ba93073</Anchor>
    <Abstract>Applies the given scale to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a880c64e4325a379452d2e322b21a05b7</Anchor>
    <Abstract>Applies the given scale to all the points already defined. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reflect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a99682468e28ba6662f8aa91e7d39c63e</Anchor>
    <Abstract>Reflect all points in this shape against a zero-origined line with a given normal. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mirror</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>aeb3a9a216758729faa1e326b98755449</Anchor>
    <Abstract>Create a symetric copy at the origin point. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mirror</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a99c3bcf179de073de0915d2152dae040</Anchor>
    <Abstract>Create a symetric copy at a given point. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mirrorAroundPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>ab93444adf1a6a896ce43a941104944fb</Anchor>
    <Abstract>Create a symetric copy at a given point. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mirrorAroundAxis</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a513984efd66227733cd3f333634c0a76</Anchor>
    <Abstract>Create a symetric copy at a given axis. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTotalLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>ae238880ea85a5e3ec8d898d7ab10c842</Anchor>
    <Abstract>Returns the total lineic length of that shape. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>ac3a1fa421c8ef3645aee85927fec4f4e</Anchor>
    <Abstract>Gets a position on the shape with index of the point and a percentage of position on the segment...</Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a262a1d8b87106620fbfdc2604d021b61</Anchor>
    <Abstract>Gets a position on the shape from lineic coordinate. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findBoundingRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a1e326082b18f083bdc334acc7402e3a0</Anchor>
    <Abstract>Computes the radius of a bounding circle centered on the origin. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>thicken</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Shape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Shape.html</Path>
    <Anchor>a2b47d25ab987ff68e5e5fe2b2d0886c2</Anchor>
    <Abstract>Applies a &quot;thickness&quot; to a shape, ie a bit like the extruder, but in 2D. </Abstract>
    <DeclaredIn>ProceduralShape.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Sharpen</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Sharpen</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Sharpen.html</Path>
    <Abstract>Increase sharpness on input image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Sharpen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Sharpen</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Sharpen.html</Path>
    <Anchor>a010334632d5e04e1854d9f85173ebf32</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Sharpen</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Sharpen.html</Path>
    <Anchor>a46174192b67f824c348621e3f7110da8</Anchor>
    <Abstract>Set the gaussian block size. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSigma</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Sharpen</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Sharpen.html</Path>
    <Anchor>a686a35090aba4bbb4f91ea841595710e</Anchor>
    <Abstract>Set sigma constant for gaussian filter. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Sharpen</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Sharpen.html</Path>
    <Anchor>acc5b9684bdb6564363ccba1306a07b00</Anchor>
    <Abstract>Set the algorithm to sharp. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Sharpen</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Sharpen.html</Path>
    <Anchor>a6327df4407881d00afc46d8a15062828</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SHARP_BASIC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Sharpen</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Sharpen.html</Path>
    <Anchor>a6d699b93d506d1fad789738c74b289c0aecf9327ff61fac768418e87437b39e35</Anchor>
    <Abstract>Use simplified block filter to sharp. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SHARP_GAUSSIAN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Sharpen</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Sharpen.html</Path>
    <Anchor>a6d699b93d506d1fad789738c74b289c0a6333a1896b6fa70a23c77ab602fb4751</Anchor>
    <Abstract>Use gaussian filter to sharp. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::ShowNormalsGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::ShowNormalsGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ShowNormalsGenerator.html</Path>
    <Abstract>This class creates a visualisation of the normals of a TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralDebugRendering.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ShowNormalsGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ShowNormalsGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ShowNormalsGenerator.html</Path>
    <Anchor>a7f42fcd1c6084dbdad57ed939bcc4fe6</Anchor>
    <DeclaredIn>ProceduralDebugRendering.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ShowNormalsGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ShowNormalsGenerator.html</Path>
    <Anchor>a7866f7c576eecda13b24a5517943d18f</Anchor>
    <Abstract>Sets the input Triangle Buffer. </Abstract>
    <DeclaredIn>ProceduralDebugRendering.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSize</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ShowNormalsGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ShowNormalsGenerator.html</Path>
    <Anchor>ab6c72c7a539bbe9df33a539e6413c087</Anchor>
    <Abstract>Sets the size of the normals representation (default = 1.0) </Abstract>
    <DeclaredIn>ProceduralDebugRendering.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVisualStyle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ShowNormalsGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ShowNormalsGenerator.html</Path>
    <Anchor>a0ededf9f51a10d3794816b541041dbac</Anchor>
    <Abstract>Sets the visual style, line or arrow (default = line) </Abstract>
    <DeclaredIn>ProceduralDebugRendering.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildManualObject</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ShowNormalsGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ShowNormalsGenerator.html</Path>
    <Anchor>a5d8f3411a43e6bbc65f200d6da3b3634</Anchor>
    <Abstract>Builds the normals representation as a manual object The input triangle buffer must not be null Scene...</Abstract>
    <DeclaredIn>ProceduralDebugRendering.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::ShowNormalsGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ShowNormalsGenerator.html</Path>
    <Anchor>a53e9213543b4b3ce1d773052c036b8bb</Anchor>
    <Abstract>Builds the normals representation as a mesh. </Abstract>
    <DeclaredIn>ProceduralDebugRendering.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VS_LINE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::ShowNormalsGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ShowNormalsGenerator.html</Path>
    <Anchor>abf607e901055c465db3a917ab69ab7a3a7a8436d537b761142ef29e7f5b5c36b1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VS_ARROW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::ShowNormalsGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1ShowNormalsGenerator.html</Path>
    <Anchor>abf607e901055c465db3a917ab69ab7a3a0946fb8cf4d810fcdb342421a92f4a9b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Solid</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Solid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Solid.html</Path>
    <Abstract>Fills full image with given colour. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Solid</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Solid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Solid.html</Path>
    <Anchor>a5424683fbeb0e1bca6734c9c225b3cea</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Solid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Solid.html</Path>
    <Anchor>ac2c61d48c45bb00241d1ceaec2fef805</Anchor>
    <Abstract>Sets the fill colour of the image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Solid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Solid.html</Path>
    <Anchor>a8bbef70674d8c04937194b15065e91b0</Anchor>
    <Abstract>Sets the fill colour of the image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Solid</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Solid.html</Path>
    <Anchor>ad0624aefd9b08d24fedecc6618c91366</Anchor>
    <Abstract>Run image generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::SphereGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::SphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SphereGenerator.html</Path>
    <Abstract>Builds an UV sphere mesh. </Abstract>
    <DeclaredIn>ProceduralSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SphereGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SphereGenerator.html</Path>
    <Anchor>a713d6d7c25a0e654344a12de200c7649</Anchor>
    <Abstract>Constructor with arguments. </Abstract>
    <DeclaredIn>ProceduralSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SphereGenerator.html</Path>
    <Anchor>aaf8189322213e2064541c2a8e027f8c8</Anchor>
    <Abstract>Sets the radius of the sphere (default=1) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumRings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SphereGenerator.html</Path>
    <Anchor>aa0bdd05ac6aa0d655bade5882da72fd6</Anchor>
    <Abstract>Sets the number of rings (default=16) Minimum of numRings is 1. </Abstract>
    <DeclaredIn>ProceduralSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegments</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SphereGenerator.html</Path>
    <Anchor>a59cfef044cfb3573f24346956f787c44</Anchor>
    <Abstract>Sets the number of segments (default=16) Minimum of numSegments is 1. </Abstract>
    <DeclaredIn>ProceduralSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SphereGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SphereGenerator.html</Path>
    <Anchor>a74114135159f19d3aee44641dd58f94f</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralSphereGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SphereGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::SphereUVModifier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::SphereUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SphereUVModifier.html</Path>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SphereUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SphereUVModifier.html</Path>
    <Anchor>a8fb6c61fd2c5250178b2b65fa320b6a6</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SphereUVModifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SphereUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SphereUVModifier.html</Path>
    <Anchor>ae7389ea97ce633206ffa4730c72a632c</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SphereUVModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SphereUVModifier.html</Path>
    <Anchor>ac45b093af62d1aae788d48d9e9b70eff</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::SpherifyModifier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::SpherifyModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpherifyModifier.html</Path>
    <Abstract>Projects all TriangleBufferVertices on a sphere. </Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpherifyModifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpherifyModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpherifyModifier.html</Path>
    <Anchor>a72fe78ddb91b94e18bff88624d847028</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpherifyModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpherifyModifier.html</Path>
    <Anchor>aaa563af42e9318aacb9dd1cac86d2643</Anchor>
    <Abstract>Input triangle buffer must not be null </Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpherifyModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpherifyModifier.html</Path>
    <Anchor>aa6750aa42fbc4038f962f2d03bdde65a</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpherifyModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpherifyModifier.html</Path>
    <Anchor>acb28352b1ba1c5bec4c7cf052d92fe40</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpherifyModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpherifyModifier.html</Path>
    <Anchor>ac4abc2ddd8b25cd9e769568a4e99e836</Anchor>
    <Abstract>Input triangle buffer must be set </Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::SpringGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::SpringGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpringGenerator.html</Path>
    <Abstract>Generates a spring mesh centered on the origin. </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SpringGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpringGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpringGenerator.html</Path>
    <Anchor>a95d1565c8a0564a7e53bec418f37dbea</Anchor>
    <Abstract>Contructor with arguments. </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpringGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpringGenerator.html</Path>
    <Anchor>aa513100647f604b1cb20aab2103ac9a1</Anchor>
    <Abstract>Sets the height of the spring (default=1) Height must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusHelix</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpringGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpringGenerator.html</Path>
    <Anchor>af38fed44fa650a67af2851450a0b4b99</Anchor>
    <Abstract>Sets helix radius (default=1) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusCircle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpringGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpringGenerator.html</Path>
    <Anchor>afe09c59d9fbb965c4b125ec3e760fe5c</Anchor>
    <Abstract>Sets radius for extruding circle (default=0.1) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumRound</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpringGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpringGenerator.html</Path>
    <Anchor>a766a4bc1c715d55567c720d8bfedb6f7</Anchor>
    <Abstract>Sets the number of segments along the height of the spring (default=1) You have to rotate more then 0...</Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegPath</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpringGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpringGenerator.html</Path>
    <Anchor>a92d8b6bfbd01def5cea4726a88be9490</Anchor>
    <Abstract>Sets the number of segments along helix path (default=10) Minimum of numSegPath is 1...</Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegCircle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpringGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpringGenerator.html</Path>
    <Anchor>adf04ecc044d61247b85d7dc95c0db95f</Anchor>
    <Abstract>Sets the number of segments for extruding circle (default=8) Minimum of numSegCircle is 1...</Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SpringGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SpringGenerator.html</Path>
    <Anchor>a768daea5f810ac51df6a9ec210245096</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralSpringGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; SpringGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::SvgLoader</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::SvgLoader</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SvgLoader.html</Path>
    <Abstract>Load shapes from an SVG file. </Abstract>
    <DeclaredIn>ProceduralSVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseSvgFile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::SvgLoader</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1SvgLoader.html</Path>
    <Anchor>ad352590bbe863fc0d77f602ad0c5f050</Anchor>
    <Abstract>Parses a SVG file. </Abstract>
    <DeclaredIn>ProceduralSVG.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Textile</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Textile</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Textile.html</Path>
    <Abstract>Creates a textile structured image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Textile</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Textile</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Textile.html</Path>
    <Anchor>a94596a3c77c70f58f9beb9755ba2f1fc</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Textile</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Textile.html</Path>
    <Anchor>aae8761ec37022a1ca45e1353bc293bca</Anchor>
    <Abstract>Set the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Textile</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Textile.html</Path>
    <Anchor>a7982a27c7f2ecfbcb932d7fd7fd26a95</Anchor>
    <Abstract>Set the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Textile</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Textile.html</Path>
    <Anchor>a7a0062a91a8a2d64e613621b773234c4</Anchor>
    <Abstract>Set the seed for &quot;random&quot; number generator. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Textile</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Textile.html</Path>
    <Anchor>aaeb1cd47aa8496c60e6aab2e96417e3d</Anchor>
    <Abstract>Run image generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::TextureBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Abstract>class to store image data while processing </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>abd87e59bd415049342c8c67e117a647c</Anchor>
    <Abstract>Set colour of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a210b99c07675c8c152b9629f6bda49f9</Anchor>
    <Abstract>Set colour of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a379d6f3ce1cc37bcec19d7fe123cf531</Anchor>
    <Abstract>Set colour of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a292f82c7b08f6c7e98652b5347c7528b</Anchor>
    <Abstract>Set red colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>aa19d99d44c22b7a6e0b7aed2bc07b23c</Anchor>
    <Abstract>Set green colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>ac3718003efc1a8994a4f78eefba43681</Anchor>
    <Abstract>Set blue colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a8794fa2d5ac4e30f94073a22571d6ef1</Anchor>
    <Abstract>Set alpha colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a631c234b3e5c790e688d319ca021f1c0</Anchor>
    <Abstract>Set red colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGreen</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a8e0bf5acbc7697aae8b285409999a545</Anchor>
    <Abstract>Set green colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBlue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a823206e557ab82c2ed2bd9419509e29c</Anchor>
    <Abstract>Set blue colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setAlpha</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a897f3248f5618e6efb1a6c414d3af753</Anchor>
    <Abstract>Set alpha colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>aebdd51e616f24d8ae403a8a85cd3347d</Anchor>
    <Abstract>Copy image data (RGBA) from a buffer to this object. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setData</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a095d44f19ac4ef0cd5fa51c08be2a978</Anchor>
    <Abstract>Copy image data (RGBA) from an other TextureBuffer object. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixel</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>abdf6ca4e27903fa91d0e4f806d1e40d4</Anchor>
    <Abstract>Get colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelRedByte</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a777f3593686c14286876f137da32b598</Anchor>
    <Abstract>Get red colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelGreenByte</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a859c2e21fb7b7605e84aed8252f3a412</Anchor>
    <Abstract>Get green colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelBlueByte</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a4c54eb9515028d225a2d9244fe5b46f1</Anchor>
    <Abstract>Get blue colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelAlphaByte</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>aad0b44935018f3d1be8bd9a646cecfec</Anchor>
    <Abstract>Get alpha colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelRedReal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a6c17c35d9e3807e03100c4bf97d7a082</Anchor>
    <Abstract>Get red colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelGreenReal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>adcf63ef3d3ac98808c10e732402aee74</Anchor>
    <Abstract>Get green colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelBlueReal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a4bfd38cd17152b21f5536722a7073259</Anchor>
    <Abstract>Get blue colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getPixelAlphaReal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a57586f7ea9c5fe60fd06694053e15415</Anchor>
    <Abstract>Get alpha colour value of a specified pixel. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>clone</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>abba965c977a317027671f2f9bba25c86</Anchor>
    <Abstract>Create a copy of the current texture image buffer. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a5d515b886fe29ab34497564c35485313</Anchor>
    <Abstract>Standard constructor which copy a given image. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>ac3bbf6c0632b4192c7f24973956e39be</Anchor>
    <Abstract>Standard constructor which creates a quadratic image buffer with the given size. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TextureBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a1e930af6982f98acfde13a5c017c4820</Anchor>
    <Abstract>Destructor which release memory. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getWidth</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>af2b69d38c03a30b2795851bebe627e8d</Anchor>
    <Abstract>Get the width of the stored image in px. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a062db724adff579075c34dd4802d2e14</Anchor>
    <Abstract>Get the height of the stored image in px. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>afea443792b4abefc72be7e1b3415b450</Anchor>
    <Abstract>Create a new image from buffer. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>saveImage</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a86afc13b595aee482e543b3d5d610c71</Anchor>
    <Abstract>Save the image from the buffer to a file. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createTexture</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureBuffer.html</Path>
    <Anchor>a83665250630de7ecd4c1aed939a41a7b</Anchor>
    <Abstract>Creates an OGRE texture and add it to current TextureManager instance. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::TextureLightBaker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Abstract>Apply an illumination on a surface. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureLightBaker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>aed7c459b0d39c0cbb7e3835887f2ab34</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNormalMap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a68c67eab7eeaa97717674cbd18b162b8</Anchor>
    <Abstract>Set parameter image for compensation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourAmbient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a3cd31199aa1e18177aa19a5190712086</Anchor>
    <Abstract>Set the ambient light colour. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourAmbient</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a5218bb8c96e9d80d0979d9dc6930dc81</Anchor>
    <Abstract>Set the ambient light colour. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourDiffuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a8c477aa06de3faf25e3b89a3f99346bb</Anchor>
    <Abstract>Set the diffuse light colour. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourDiffuse</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>af092b06dba25d23f601dec2b7fb640bf</Anchor>
    <Abstract>Set the diffuse light colour. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourSpecular</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a4f46c6683a96e092dc2df4d2bcec8a22</Anchor>
    <Abstract>Set the specular light colour. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColourSpecular</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>adecdf257db7b6f920541b11ab0f855cd</Anchor>
    <Abstract>Set the specular light colour. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColours</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a7729f47a5e51aaeb08f766d58e34386d</Anchor>
    <Abstract>Set the light colours. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a9abae8a84067999d74ae6d628cf728dd</Anchor>
    <Abstract>Set the position of light on/over the image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a5df746688eaf8527b196a1c06f79712d</Anchor>
    <Abstract>Set the position of light on/over the image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSpecularPower</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a974c4de16ce7970cb68044c764b2221e</Anchor>
    <Abstract>Set specular light power. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setBumpPower</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a020c6bc4fad40c9690d2b8a3f990ddca</Anchor>
    <Abstract>Set bump mapping power. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureLightBaker</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureLightBaker.html</Path>
    <Anchor>a027f6dc940199eb68bff056c4a8d2d9c</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::TextureProcessing</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Abstract>base class for material generation classes. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TextureProcessing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>addeb3c1123d340e639cb55037fcc7744</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>ad8c3ca4b0a69700142ed4c62fa4f917e</Anchor>
    <Abstract>Run processing algorithmus. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~TextureProcessing</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a9c73f1129b7c9e73c4a747eb9cf6c95e</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Threshold</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Threshold</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Threshold.html</Path>
    <Abstract>Simple threshold filter. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Threshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Threshold</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Threshold.html</Path>
    <Anchor>aee2b05efad7f7a735924fd43463405be</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setThreshold</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Threshold</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Threshold.html</Path>
    <Anchor>ab244906c3d22d8af2e9148b51af751fa</Anchor>
    <Abstract>Set threshold value. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRatio</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Threshold</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Threshold.html</Path>
    <Anchor>aed98b735e786aed57a2f9f66a129359c</Anchor>
    <Abstract>Set threshold ratio which affects the painting mode. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Threshold</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Threshold.html</Path>
    <Anchor>aa29f8a73e154c1b1fc5b8b46efc6de9e</Anchor>
    <Abstract>Set threshold mode. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Threshold</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Threshold.html</Path>
    <Anchor>a8d910b63762d878908842839fc81470b</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_EXPAND_DOWNWARDS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Threshold</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Threshold.html</Path>
    <Anchor>ae036b7f55c55b9c36b87a8e7fd85069ea48bc968324255c0f84f18b3a05bac65d</Anchor>
    <Abstract>Set pixel below threshould value to black. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_EXPAND_UPWARDS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Threshold</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Threshold.html</Path>
    <Anchor>ae036b7f55c55b9c36b87a8e7fd85069eaf4b1c5e505e6a9ec818716175528f9b0</Anchor>
    <Abstract>Set pixel above threshould value to white. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_COMPRESS_BELOW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Threshold</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Threshold.html</Path>
    <Anchor>ae036b7f55c55b9c36b87a8e7fd85069ea69359b9ea274216f9ccfae1c9d2ce82e</Anchor>
    <Abstract>Set pixel below threshould value to an avarage value of all pixel below threshould value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MODE_COMPRESS_ABOVE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Threshold</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Threshold.html</Path>
    <Anchor>ae036b7f55c55b9c36b87a8e7fd85069eab16b8fe9bace10c4acf7e6b0b2445a60</Anchor>
    <Abstract>Set pixel above threshould value to an avarage value of all pixel above threshould value...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::TorusGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::TorusGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusGenerator.html</Path>
    <Abstract>Builds a torus mesh whose axis is Y. </Abstract>
    <DeclaredIn>ProceduralTorusGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TorusGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusGenerator.html</Path>
    <Anchor>a68b84e275457b594b128dcece1cc4b79</Anchor>
    <Abstract>Constructor with arguments. </Abstract>
    <DeclaredIn>ProceduralTorusGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusGenerator.html</Path>
    <Anchor>aa65b8116f6e05395f96fa882e6a51558</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralTorusGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusGenerator.html</Path>
    <Anchor>a309d2245f2606bb6088d6bf30ec0c336</Anchor>
    <Abstract>Sets the number of segments on the section circle Minimum of numSegSection is 1. </Abstract>
    <DeclaredIn>ProceduralTorusGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegCircle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusGenerator.html</Path>
    <Anchor>ac959915c0eab58260a3edf959f7d03bc</Anchor>
    <Abstract>Sets the number of segments along the guiding circle Minimum of numSegCircle is 1. </Abstract>
    <DeclaredIn>ProceduralTorusGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusGenerator.html</Path>
    <Anchor>a24c5892e6c1084fbc0c870889f758629</Anchor>
    <Abstract>Sets the radius of the guiding circle Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralTorusGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSectionRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusGenerator.html</Path>
    <Anchor>a21a14d0816cfcc3b7c5701eefb2f7dc1</Anchor>
    <Abstract>Sets the radius of the section circle Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralTorusGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::TorusKnotGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::TorusKnotGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusKnotGenerator.html</Path>
    <Abstract>Builds a torus knot mesh. </Abstract>
    <DeclaredIn>ProceduralTorusKnotGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TorusKnotGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusKnotGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusKnotGenerator.html</Path>
    <Anchor>a191fe563da4b62561f85e2da6fd49f93</Anchor>
    <Abstract>Constructor with arguments. </Abstract>
    <DeclaredIn>ProceduralTorusKnotGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusKnotGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusKnotGenerator.html</Path>
    <Anchor>ae1791fa669145fe4c6d8ab5ba52bd4f3</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralTorusKnotGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusKnotGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusKnotGenerator.html</Path>
    <Anchor>a1437b6ee112e0f6837c21ebc09e626ae</Anchor>
    <Abstract>Sets the number of segments along the section (default=8) Minimum of numSegCircle is 1...</Abstract>
    <DeclaredIn>ProceduralTorusKnotGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegCircle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusKnotGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusKnotGenerator.html</Path>
    <Anchor>ac28617366f38b408f8fc563b39922238</Anchor>
    <Abstract>Sets the number of segments along the circle (default=16) Minimum of numSegCircle is 1...</Abstract>
    <DeclaredIn>ProceduralTorusKnotGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusKnotGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusKnotGenerator.html</Path>
    <Anchor>a8802b23766763dfcb13ade93d1213e70</Anchor>
    <Abstract>Sets the main radius of the knot (default=1) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralTorusKnotGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSectionRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusKnotGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusKnotGenerator.html</Path>
    <Anchor>af17c205d1ba5bf88727319cc7068afdb</Anchor>
    <Abstract>Sets the section radius (default=0.2) Radius must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralTorusKnotGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusKnotGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusKnotGenerator.html</Path>
    <Anchor>a55ef34d9576dbdd59d5de7e0f528bf9a</Anchor>
    <Abstract>Sets the p parameter of the knot (default=2) Parameter p must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralTorusKnotGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setQ</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TorusKnotGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TorusKnotGenerator.html</Path>
    <Anchor>ab4084a143b420fe32e08e9daac9c84a0</Anchor>
    <Abstract>Sets the q parameter of the knot (default=3) Parameter q must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralTorusKnotGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TorusKnotGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Track</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Abstract>Represents a curve by interpolating between a list of key/values. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Track</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>a6b38931f01fa9089461ead7c9592a4d8</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAddressingMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>a36b9845a1f8f73ee96c91397a7be8873</Anchor>
    <Abstract>Gets addressing mode of the curve. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addKeyFrame</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>a94efed6a39dd90dff39d0b6b6238ca40</Anchor>
    <Abstract>Inserts a new Key/Value couple anywhere on the track (it is auto-sorted anyway) </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isInsertPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>afd4c69dab228792818d93d1ef82c590b</Anchor>
    <Abstract>Tells whether we should add new points to principal curve if a key is defined here but not on princip...</Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>ad9bcff74fa6a09726f065856ffb9bcfc</Anchor>
    <Abstract>Gets the value on the current point, taking into account the addressing mode. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>af0b09ca2334373b839c7480734fea9ff</Anchor>
    <Abstract>Gets the value on the current point. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getKeyValueBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>a6653b2d08eec351273f65d2533eec036</Anchor>
    <Abstract>Get the key value couple before current point, taking into account addressing mode. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getKeyValueBefore</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>adbe65cc8e15b3a0af2b6418c0b03d37f</Anchor>
    <Abstract>Get the key value couple before current point. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getKeyValueAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>ae248975e780fd29d64208f289bc45e9e</Anchor>
    <Abstract>Get the key value couple after current point, taking into account addressing mode. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getKeyValueAfter</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>a06d8e3c8b6c3f5dbb94a2d24ef825211</Anchor>
    <Abstract>Get the key value couple after current point. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>a6c26e885c9df25be419b12a25d7e0f68</Anchor>
    <Abstract>Gets the first value in the track. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLastValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>a0b128d837abe741593a126b133b4e927</Anchor>
    <Abstract>Gets the last value in the track. </Abstract>
    <DeclaredIn>ProceduralTrack.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mAddressingMode</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>a0882b7937a213a23109878526c811367</Anchor>
    <Abstract>Adressing mode of the track (see the enum definition for more details) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInsertPoint</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>ac7e7f0e569edd6cc86b226d4d7cdb841</Anchor>
    <Abstract>Tells whether we should add new points to principal curve if a key is defined here but not on princip...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mKeyFrames</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>a39edb0268f9c4b6384b2527e879a7ece</Anchor>
    <Abstract>Key frames. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AM_ABSOLUTE_LINEIC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>ab9c90afee23d00f1ed7b1ed489a8b837ab86b34f3483198204a8850887d092e7e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AM_RELATIVE_LINEIC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>ab9c90afee23d00f1ed7b1ed489a8b837a408b68ff4565dac5c3a76b9f4c810fe7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AM_POINT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Procedural::Track</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Track.html</Path>
    <Anchor>ab9c90afee23d00f1ed7b1ed489a8b837a2a91dd7d5eae641d62511460510e3a4c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Triangle2D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Triangle2D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Triangle2D.html</Path>
    <Abstract>Represents a 2D triangle. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle2D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Triangle2D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Triangle2D.html</Path>
    <Anchor>a5743a97fbdd060b082ffde1f89e82eb5</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Triangle2D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Triangle2D.html</Path>
    <Anchor>afd3de2d6c07755a85e2a8111f82e6537</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Triangle3D</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Triangle3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Triangle3D.html</Path>
    <Abstract>Represents a 3D triangle. </Abstract>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangle3D</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Triangle3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Triangle3D.html</Path>
    <Anchor>ab3b8009d2e84c5345b91498ece6886e0</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>findIntersect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Triangle3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Triangle3D.html</Path>
    <Anchor>a0734fad889e58e561653b99d40d6b50a</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::Triangle3D</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Triangle3D.html</Path>
    <Anchor>a8a8ca67abff5718a1a6090d994e1cb90</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::TriangleBuffer</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Abstract>This is ogre-procedural&amp;#39;s temporary mesh buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>acde0212ce347362524180be857760c89</Anchor>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>append</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>aebf799cecd2705dfbcdf5b8339fb05dd</Anchor>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>beginSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>ad69508d289c542908145f4adab792aba</Anchor>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>endSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a66022cd31c540aa82079be4040fa80d7</Anchor>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFullSection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a6b3e25545d02067af4d168577049f0e7</Anchor>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a9998220927aff5884d527d768fa97adc</Anchor>
    <Abstract>Gets a modifiable reference to vertices. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>aa2ad43641c75a1ac3e3f3cdd5a6ca7c0</Anchor>
    <Abstract>Gets a non-modifiable reference to vertices. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a00a1555b6c31e4f39fd282edf2a97837</Anchor>
    <Abstract>Gets a modifiable reference to vertices. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>ab184d74f62c8e28423d1bba9080d81d9</Anchor>
    <Abstract>Gets a non-modifiable reference to indices. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rebaseOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>ae2789e4d50688037b2e4ab4d6d5521ef</Anchor>
    <Abstract>Rebase index offset : call that function before you add a new mesh to the triangle buffer...</Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>transformToMesh</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a3c8f44ebaf7d7bfa04350c9f8ee27a56</Anchor>
    <Abstract>Builds an Ogre Mesh from this buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a05e34e8725ea96fdb49cd0ae7115fc9e</Anchor>
    <Abstract>Adds a new vertex to the buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a537dc9a01e0a0fe63212864075d6e7b3</Anchor>
    <Abstract>Adds a new vertex to the buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>ab8f270bf28caa93dc7287fcccd298ac0</Anchor>
    <Abstract>Adds a new vertex to the buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>position</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>acb81be43081a65b2bd401b727c0e9ec9</Anchor>
    <Abstract>Adds a new vertex to the buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>normal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>adc14f0e2384bf0e1330da10993ce4f62</Anchor>
    <Abstract>Sets the normal of the current vertex. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a4b68f2f787b2b87a307ad3dc4b1078ed</Anchor>
    <Abstract>Sets the texture coordinates of the current vertex. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>textureCoord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a022f0011c9ff5f56766ff211e91e3600</Anchor>
    <Abstract>Sets the texture coordinates of the current vertex. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>index</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>ad98657062aea2ed279b8fc7724a96c19</Anchor>
    <Abstract>Adds an index to the index buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>af78b242776a3dc174996b597c29c708b</Anchor>
    <Abstract>Adds a triangle to the index buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>applyTransform</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a10354637af639d834c5c6622d6c8755a</Anchor>
    <Abstract>Applies a matrix to transform all vertices inside the triangle buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a23ac51b3e2f8ce2dc0f45e022ae0da8f</Anchor>
    <Abstract>Applies the translation immediately to all the points contained in that triangle buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>translate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a227f32961b9165ae9be564d47512033d</Anchor>
    <Abstract>Applies the translation immediately to all the points contained in that triangle buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>afa867d09e21d01712daa6f826ad59d42</Anchor>
    <Abstract>Applies the rotation immediately to all the points contained in that triangle buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a61cf24621f8a7b329e37ea347d7eb711</Anchor>
    <Abstract>Applies an immediate scale operation to that triangle buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scale</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>aba22542aa46691cee904753c289c20d8</Anchor>
    <Abstract>Applies an immediate scale operation to that triangle buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invertNormals</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>aa6a8dbd63a5ab4a3bca409143192f9a6</Anchor>
    <Abstract>Applies normal inversion on the triangle buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>estimateVertexCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>aac44d04a05f373c7241bc5358d85cd1b</Anchor>
    <Abstract>Gives an estimation of the number of vertices need for this triangle buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>estimateIndexCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a1cd9268a6812b805d14c706b48eb5484</Anchor>
    <Abstract>Gives an estimation of the number of indices needed for this triangle buffer. </Abstract>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mIndices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a7e182bc5a102b3b2e32e6af9508f9e20</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVertices</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a85ce6c161a0d2a1e51ef61c017ce8c0e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>globalOffset</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>aa157da1d0bcecf174d8040169adcd17c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEstimatedVertexCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>ac51b42331cf86b8424da90f2968fced2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEstimatedIndexCount</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a2dc9d6711273bc106509e77db3e7f23e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCurrentVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a51e1b057e3c4a8913b4bfb61bab23060</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSections</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleBuffer.html</Path>
    <Anchor>a11bd0584d1f69302f0de402c2fa1fd2e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::TriangleBuffer::Section</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::TriangleBuffer::Section</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Section.html</Path>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSectionName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer::Section</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Section.html</Path>
    <Anchor>a26781dc49b6c5ce3d6c815a0fb86f45a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFirstIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer::Section</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Section.html</Path>
    <Anchor>a7d6b874c860b5aff0df79fa01fe3cede</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLastIndex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer::Section</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Section.html</Path>
    <Anchor>ab17982b828da9a5f911411abbc90b2c9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mFirstVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer::Section</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Section.html</Path>
    <Anchor>a9ae859655c27ef95b772b93f2374245b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLastVertex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer::Section</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Section.html</Path>
    <Anchor>a78ee3a365221229c5d2a7a1dcff28d39</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer::Section</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Section.html</Path>
    <Anchor>aa0c655067a2f73770aadc130d8dcfb05</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::TriangleBuffer::Vertex</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::TriangleBuffer::Vertex</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Vertex.html</Path>
    <DeclaredIn>ProceduralTriangleBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer::Vertex</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Vertex.html</Path>
    <Anchor>af63c5c35f1afd8c32be5eece9286a435</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNormal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer::Vertex</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Vertex.html</Path>
    <Anchor>a50489b83f3dd3d9320ce9d5de6105bdf</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TriangleBuffer::Vertex</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1TriangleBuffer_1_1Vertex.html</Path>
    <Anchor>ae2bf15aa19a6d90f5482ef2661a30985</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::TriangleShape</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::TriangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleShape.html</Path>
    <Abstract>Builds a triangele shape. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TriangleShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleShape.html</Path>
    <Anchor>aed3158b29b2f22fb8a9c4e3337dfbf3e</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLength</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleShape.html</Path>
    <Anchor>aa197eaea712d7ed5edba1a636b8a6c24</Anchor>
    <Abstract>Creates an equilateral triangle Length of triangle edges must be longer than 0! </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLengthA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleShape.html</Path>
    <Anchor>a93fba18a530ab62c57a2c291aa0d3079</Anchor>
    <Abstract>Sets length of edge A Length of triangle edge must be longer than 0! Length of triangle edge A must b...</Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLengthB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleShape.html</Path>
    <Anchor>a1ec456e320e15e23668c09ecc88165ba</Anchor>
    <Abstract>Sets length of edge B Length of triangle edge must be longer than 0! Length of triangle edge A must b...</Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLengthC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleShape.html</Path>
    <Anchor>a17ce3a3421d56bf0c675fa1694daaf6c</Anchor>
    <Abstract>Sets length of edge C Length of triangle edge must be longer than 0! Length of triangle edge A must b...</Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeShape</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TriangleShape</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TriangleShape.html</Path>
    <Anchor>aef856bd03856c6623de8975b3785b6f0</Anchor>
    <Abstract>Builds the shape. </Abstract>
    <DeclaredIn>ProceduralShapeGenerators.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Triangulator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Triangulator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Triangulator.html</Path>
    <Abstract>Implements a Delaunay Triangulation algorithm. </Abstract>
    <DeclaredIn>ProceduralTriangulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Triangulator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Triangulator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Triangulator.html</Path>
    <Anchor>ae4de3038b6e30b61593ddee90d5453bc</Anchor>
    <Abstract>Default ctor. </Abstract>
    <DeclaredIn>ProceduralTriangulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setShapeToTriangulate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Triangulator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Triangulator.html</Path>
    <Anchor>af4946e1c4a2209b34030d309e4ed5047</Anchor>
    <Abstract>Sets shape to triangulate. </Abstract>
    <DeclaredIn>ProceduralTriangulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setMultiShapeToTriangulate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Triangulator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Triangulator.html</Path>
    <Anchor>a1daaf800930e237214de874d1d4b13f3</Anchor>
    <Abstract>Sets multi shape to triangulate. </Abstract>
    <DeclaredIn>ProceduralTriangulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSegmentListToTriangulate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Triangulator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Triangulator.html</Path>
    <Anchor>aaf4d32d7553b66935ca78ae39cb78406</Anchor>
    <Abstract>Sets segment list to triangulate. </Abstract>
    <DeclaredIn>ProceduralTriangulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setManualSuperTriangle</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Triangulator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Triangulator.html</Path>
    <Anchor>a928a55cb38bc2ba6e4dc790b4fd87a0d</Anchor>
    <Abstract>Sets manual super triangle (instead of letting Triangulator guessing it) </Abstract>
    <DeclaredIn>ProceduralTriangulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRemoveOutside</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Triangulator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Triangulator.html</Path>
    <Anchor>ac5afd453f55b9d63fb1af15e3b4e9a00</Anchor>
    <Abstract>Sets if the outside of shape must be removed. </Abstract>
    <DeclaredIn>ProceduralTriangulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triangulate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Triangulator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Triangulator.html</Path>
    <Anchor>af43f265d04764efc85adb4d60835465a</Anchor>
    <Abstract>Executes the Constrained Delaunay Triangulation algorithm. </Abstract>
    <DeclaredIn>ProceduralTriangulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Triangulator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Triangulator.html</Path>
    <Anchor>aec629b2ee0e23d919cba20a49513531e</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralTriangulator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; Triangulator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::TubeGenerator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::TubeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TubeGenerator.html</Path>
    <Abstract>Builds an Y-axis tube mesh, i.e. </Abstract>
    <DeclaredIn>ProceduralTubeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TubeGenerator</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TubeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TubeGenerator.html</Path>
    <Anchor>a05b11242d7f06f67c3d7f030e173976e</Anchor>
    <Abstract>Constructor with arguments. </Abstract>
    <DeclaredIn>ProceduralTubeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addToTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TubeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TubeGenerator.html</Path>
    <Anchor>aef68170e22fe48b5f5d34bf6bc3e752c</Anchor>
    <Abstract>Builds the mesh into the given TriangleBuffer. </Abstract>
    <DeclaredIn>ProceduralTubeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegBase</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TubeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TubeGenerator.html</Path>
    <Anchor>a5a7064a1fc6200c9b3e04bbb4857cc7a</Anchor>
    <Abstract>Sets the number of segments when rotating around the tube&amp;#39;s axis (default=16) Minimum of numSegBase i...</Abstract>
    <DeclaredIn>ProceduralTubeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumSegHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TubeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TubeGenerator.html</Path>
    <Anchor>a62b5215f4b781f7b1d58f766c44d12bd</Anchor>
    <Abstract>Sets the number of segments along the height of the cylinder (default=1) Minimum of numSegHeight is 1...</Abstract>
    <DeclaredIn>ProceduralTubeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOuterRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TubeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TubeGenerator.html</Path>
    <Anchor>a4bd05401e5186f30fed662ffe11d0f4a</Anchor>
    <Abstract>Sets the outer radius of the tube (default=2) Radius must be larger than 0! Outer radius must be bigg...</Abstract>
    <DeclaredIn>ProceduralTubeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInnerRadius</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TubeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TubeGenerator.html</Path>
    <Anchor>a7d719eb4b0cae75d197e3aac550f7b73</Anchor>
    <Abstract>Sets the inner radius of the tube (default=1) Radius must be larger than 0! Outer radius must be bigg...</Abstract>
    <DeclaredIn>ProceduralTubeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setHeight</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TubeGenerator</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TubeGenerator.html</Path>
    <Anchor>a452cb443e85f28dc56f6d69663f4ec0c</Anchor>
    <Abstract>Sets the height of the tube (default=1) Height must be larger than 0! </Abstract>
    <DeclaredIn>ProceduralTubeGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>realizeMesh</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa7dfcab33da6584593ac02e5254dc846</Anchor>
    <Abstract>Builds a mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buildTriangleBuffer</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2cf7719d33eab80d951ad0546c3783c2</Anchor>
    <Abstract>Outputs a triangleBuffer. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ad539882d8d1cef29c912fb3b8094b056</Anchor>
    <Abstract>Sets U Tile, ie the number by which u texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a2ed0a61531c1c54029c575c8ad9be559</Anchor>
    <Abstract>Sets V Tile, ie the number by which v texture coordinates are multiplied (default=1) ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTextureRectangle</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aebdafef8df0498c2702c786333aa3008</Anchor>
    <Abstract>Sets the texture rectangle. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a4c39a9533e4fe52163a55940056d158f</Anchor>
    <Abstract>Sets whether normals are enabled or not (default=true) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a47daa88ef2e718a32569efc7d8a8d446</Anchor>
    <Abstract>Sets the number of texture coordintate sets (default=1) </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aa4c9fab765e76a65133d3a31a4bc42a5</Anchor>
    <Abstract>Sets whether to switch U and V texture coordinates. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a46327d1ff72c7363e19233aefc562518</Anchor>
    <Abstract>Sets an orientation to give when building the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a62cc5c13904c4c1a933ae97019b85751</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aac764cd50e633f7998b61347b3844e57</Anchor>
    <Abstract>Sets a translation baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1306894a5af30f6058783bf6a4f64fa6</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>afbad092c60ffcc00e85c984e31e6273b</Anchor>
    <Abstract>Sets a uniform scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ab32bfd2213029fcdb73fb784f756c10c</Anchor>
    <Abstract>Sets a scale baked into the resulting mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetTransforms</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a78f88bcf4bdaac4265e5d522ed75e31f</Anchor>
    <Abstract>Resets all transforms (orientation, position and scale) that would have been applied to the mesh to t...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addPoint</Name>
      <APILanguage>unknown</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>aced934e4466c3258b478520c267e8e95</Anchor>
    <Abstract>Adds a new point to a triangle buffer, using the format defined for that MeshGenerator. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1761f88918e79f9b37455511a8f60140</Anchor>
    <Abstract>A pointer to the default scene manager. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mVTile</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a1fbf53d72f537a232ab3658412b85810</Anchor>
    <Abstract>V tile for texture coords generation. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEnableNormals</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae88cf348d82505fb910a8cfbdeb85525</Anchor>
    <Abstract>Whether to produces normals or not. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mNumTexCoordSet</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a24aae028c4a7838d32eed71c1539f66c</Anchor>
    <Abstract>The number of texture coordinate sets to include. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mUVOrigin</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac2fec8beb97af9bcf34e69d247d658db</Anchor>
    <Abstract>Rectangle in which the texture coordinates will be placed. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSwitchUV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>adb5960095302b4f626ea94f65223cd9f</Anchor>
    <Abstract>If set to true, the UV coordinates coming from the mesh generator will be switched. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mOrientation</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>acd8cf6ce392def9883338b8f4057c2e8</Anchor>
    <Abstract>Orientation to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mScale</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>a265c4f0712ec2dc05445c5bcf15fec18</Anchor>
    <Abstract>Scale to apply the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mPosition</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ac349c09c925cb50d505ddc3a3a2a9a8c</Anchor>
    <Abstract>Position to apply to the mesh. </Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTransform</Name>
      <APILanguage>unknown</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::MeshGenerator&lt; TubeGenerator &gt;</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1MeshGenerator.html</Path>
    <Anchor>ae2d34f0f94346be89cfaea965acd06b6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::UnweldVerticesModifier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::UnweldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1UnweldVerticesModifier.html</Path>
    <Abstract>Switches the triangle buffer from indexed triangles to (pseudo) triangle list It can be used if you w...</Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UnweldVerticesModifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::UnweldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1UnweldVerticesModifier.html</Path>
    <Anchor>a941cd52c71bb226ad1a8ee6168a854fa</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::UnweldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1UnweldVerticesModifier.html</Path>
    <Anchor>a4b3a28aa42ac4bec13c0fbb2a881a3c8</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::UnweldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1UnweldVerticesModifier.html</Path>
    <Anchor>a4c8af1d2ff16a4f03eeaec3ae5f0a3a7</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::UnweldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1UnweldVerticesModifier.html</Path>
    <Anchor>a4c927aac4f706868b62848da46f39c7e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Utils</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Abstract>Holds a bunch of static utility functions. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>log</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>ad92ee82c74988aba0e7ee64695af5ac4</Anchor>
    <Abstract>Outputs something to the ogre log, with a [PROCEDURAL] prefix. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>a08965322647214d1cb8a62379311f334</Anchor>
    <Abstract>Gets the min of the coordinates between 2 vectors. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>af1cfd0c96f9e22fd3f1943aa8361540a</Anchor>
    <Abstract>Gets the max of the coordinates between 2 vectors. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>min</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>a6751cbfff96cd2ee60d60369b91331ed</Anchor>
    <Abstract>Gets the min of the coordinates between 2 vectors. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>max</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>ad5c55eafe29c6afd728c1125ee9e4b99</Anchor>
    <Abstract>Gets the max of the coordinates between 2 vectors. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AABBfromPoints</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>a827e7fad676a063c42495afd2cd45385</Anchor>
    <Abstract>Builds an AABB from a list of points. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>a254fc22cd530a1849a9a9f72e331a197</Anchor>
    <Abstract>Generate a name from a prefix and a counter. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vectorPermute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>a5f4683e584f51bea4987fc1e9f0c27ca</Anchor>
    <Abstract>Shifts the components of the vector to the right. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vectorAntiPermute</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>aeedface8bc89a55f881c9d244c497a04</Anchor>
    <Abstract>Shifts the components of the vector to the left. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>rotateVector2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>a55d2fcefd8e25cfc2a840f08a9ff3921</Anchor>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>cap</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>ace86b9499752a85945257bfc2df345ff</Anchor>
    <Abstract>Caps n between min and max. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modulo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>ac7b0d4b85bfdfa6dfca173a6f3f90614</Anchor>
    <Abstract>An extend version of the standard modulo, in that int values are &quot;wrapped&quot; in both directions...</Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>angleBetween</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>ac0e625711fdad4c9351cc9b4a7d4130b</Anchor>
    <Abstract>Equivalent of Ogre::Vector3::angleBetween, applied to Ogre::Vector2. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>angleTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>adadd5621b2cfd575a5dc78510b0b7651</Anchor>
    <Abstract>Gives the oriented angle from v1 to v2 in the [0;2PI[ range. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>signedAngleTo</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>a153c6a230d5b153c6edb9b7c6cbaf3cb</Anchor>
    <Abstract>Gives the oriented angle from v1 to v2 in the ]-PI;PI] range. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_computeQuaternion</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>a31a2d5269d61ef3478cc02f783afe158</Anchor>
    <Abstract>Computes a quaternion between UNIT_Z and direction. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>vec2ToVec3Y</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>a5b1276b724b8803b878b63ec8cd90f95</Anchor>
    <Abstract>Maps a vector2 to vector3, with Y=0. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>binom</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>afe2a0ea369fe2f18b4f592c55324863e</Anchor>
    <Abstract>binomial coefficients (a over b) </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reframe</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>Procedural::Utils</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Utils.html</Path>
    <Anchor>afce258cda22461218c6288c96063457d</Anchor>
    <Abstract>Transforms an input vector expressed in the 0,0-&gt;1,1 rect towards another rect. </Abstract>
    <DeclaredIn>ProceduralUtils.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Vector2Comparator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Vector2Comparator</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Vector2Comparator.html</Path>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Vector2Comparator</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Vector2Comparator.html</Path>
    <Anchor>ad3ad499cc691c66728814ef80fd38559</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Vector3Comparator</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Vector3Comparator</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Vector3Comparator.html</Path>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operator()</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Procedural::Vector3Comparator</Scope>
    </TokenIdentifier>
    <Path>structProcedural_1_1Vector3Comparator.html</Path>
    <Anchor>a6c63ee11f8417b677736b2e6a6384584</Anchor>
    <DeclaredIn>ProceduralGeometryHelpers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Vortex</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Vortex</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Vortex.html</Path>
    <Abstract>Twist some fragment of input image. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Vortex</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Vortex</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Vortex.html</Path>
    <Anchor>a0139a02916a248645034803509e2a873</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Vortex</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Vortex.html</Path>
    <Anchor>a828c7a8497524956c23c9ea48390df3a</Anchor>
    <Abstract>Set the relative position of the twist center on x axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCenterY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Vortex</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Vortex.html</Path>
    <Anchor>a694b80d79e3daf745b40758fe1e3d5d7</Anchor>
    <Abstract>Set the relative position of the twist center on y axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Vortex</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Vortex.html</Path>
    <Anchor>aeca7038e11aef3f0dceba2911c17d16f</Anchor>
    <Abstract>Set the relative radius of the twist area on x axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRadiusY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Vortex</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Vortex.html</Path>
    <Anchor>ad221426d3d611cadd9f9a28f6f20af2b</Anchor>
    <Abstract>Set the relative radius of the twist area on y axis. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTwist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Vortex</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Vortex.html</Path>
    <Anchor>a829343e394b3c51277ac8c793ad53c1e</Anchor>
    <Abstract>Set the twist angle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTwist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Vortex</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Vortex.html</Path>
    <Anchor>a1d67e9618da7482d2c0b6983dc6cc2dd</Anchor>
    <Abstract>Set the twist angle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTwist</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Vortex</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Vortex.html</Path>
    <Anchor>aa79a9e7c7beebcf0a924ca22c7bc6e50</Anchor>
    <Abstract>Set the twist angle. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Vortex</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Vortex.html</Path>
    <Anchor>a48cc9fc7a655cd833fe6a6de0cd29638</Anchor>
    <Abstract>Run image manipulation. </Abstract>
    <DeclaredIn>ProceduralTextureModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::WeldVerticesModifier</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::WeldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1WeldVerticesModifier.html</Path>
    <Abstract>Welds together the vertices which are &amp;#39;close enough&amp;#39; one to each other. </Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WeldVerticesModifier</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::WeldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1WeldVerticesModifier.html</Path>
    <Anchor>a0c8e5ee58bf3283769efdf41ef66f4b6</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::WeldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1WeldVerticesModifier.html</Path>
    <Anchor>a9d9e46dbdcb7529bf216ac08fc738938</Anchor>
    <Abstract>The triangle buffer to modify. </Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTolerance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::WeldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1WeldVerticesModifier.html</Path>
    <Anchor>af2e335dd5fc780c6ed2b0a243a2cd4be</Anchor>
    <Abstract>The tolerance in position to consider that 2 vertices are the same (default = 1e-3) ...</Abstract>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>modify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::WeldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1WeldVerticesModifier.html</Path>
    <Anchor>af4d8ea52732ccaa221db8a3d7595b4b2</Anchor>
    <DeclaredIn>ProceduralMeshModifiers.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mInputTriangleBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::WeldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1WeldVerticesModifier.html</Path>
    <Anchor>a32e8a7bcca80d6f35ad3b5ac867af540</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mTolerance</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::WeldVerticesModifier</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1WeldVerticesModifier.html</Path>
    <Anchor>a0fb71f23884c4e3a1fc135bb03536eff</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Procedural::Wood</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Procedural::Wood</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Wood.html</Path>
    <Abstract>Creates a wood slice image. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Wood</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Wood</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Wood.html</Path>
    <Anchor>aca5f79d7dbb3b4295c1a40319298d8c6</Anchor>
    <Abstract>Default constructor. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Wood</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Wood.html</Path>
    <Anchor>a1cfe5a4e7668fbbb81d6313f7a4a7ef8</Anchor>
    <Abstract>Set the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setColour</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Wood</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Wood.html</Path>
    <Anchor>a498308691e361cc9476b5b86875faad9</Anchor>
    <Abstract>Set the colour of the background. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Wood</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Wood.html</Path>
    <Anchor>a0736f8344df969fc222c707433fa22e7</Anchor>
    <Abstract>Set the seed for &quot;random&quot; number generator. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setRings</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Wood</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Wood.html</Path>
    <Anchor>acc18e53985d7720770484406c1cec271</Anchor>
    <Abstract>Sets the number of annual rings. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>process</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::Wood</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1Wood.html</Path>
    <Anchor>ae8a97cb509675144d5e33d42f91fc832</Anchor>
    <Abstract>Run image generation. </Abstract>
    <DeclaredIn>ProceduralTextureGenerator.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a4ce677a0989c9a22b2020aa447498be2</Anchor>
    <Abstract>Get name of the filter as string. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a623523ae8da46f7e832f09e9d99a52ac</Anchor>
    <Abstract>Enable/Disable logging. </Abstract>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>logMsg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>adecf2735aea4b02de63c22f6497230b2</Anchor>
    <DeclaredIn>ProceduralTextureBuffer.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mBuffer</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a8971675a07c3d8acfe0e4299c4b1cc67</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mName</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a5e9ae6158d0c7c206202a2135cd1c100</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mLog</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Procedural::TextureProcessing</Scope>
    </TokenIdentifier>
    <Path>classProcedural_1_1TextureProcessing.html</Path>
    <Anchor>a6d3dc39d06295163b10815db241297a3</Anchor>
  </Token>
</Tokens>
